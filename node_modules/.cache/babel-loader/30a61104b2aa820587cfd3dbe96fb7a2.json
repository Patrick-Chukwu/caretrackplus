{"ast":null,"code":"import { defineComponent, h, Fragment, Teleport } from 'vue';\nimport { Calendar } from '@fullcalendar/core';\nimport { CustomRenderingStore } from '@fullcalendar/core/internal';\nimport { OPTION_IS_COMPLEX } from './options.js';\nconst FullCalendar = defineComponent({\n  props: {\n    options: Object\n  },\n\n  data() {\n    return {\n      renderId: 0,\n      customRenderingMap: new Map()\n    };\n  },\n\n  methods: {\n    getApi() {\n      return getSecret(this).calendar;\n    },\n\n    buildOptions(suppliedOptions) {\n      return { ...suppliedOptions,\n        customRenderingMetaMap: kebabToCamelKeys(this.$slots),\n        handleCustomRendering: getSecret(this).handleCustomRendering\n      };\n    }\n\n  },\n\n  render() {\n    const customRenderingNodes = [];\n\n    for (const customRendering of this.customRenderingMap.values()) {\n      customRenderingNodes.push(h(CustomRenderingComponent, {\n        key: customRendering.id,\n        customRendering\n      }));\n    }\n\n    return h('div', {\n      // when renderId is changed, Vue will trigger a real-DOM async rerender, calling beforeUpdate/updated\n      attrs: {\n        'data-fc-render-id': this.renderId\n      }\n    }, h(Fragment, customRenderingNodes)); // for containing CustomRendering keys\n  },\n\n  mounted() {\n    const customRenderingStore = new CustomRenderingStore();\n    getSecret(this).handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\n    const calendarOptions = this.buildOptions(this.options);\n    const calendar = new Calendar(this.$el, calendarOptions);\n    getSecret(this).calendar = calendar;\n    calendar.render();\n    customRenderingStore.subscribe(customRenderingMap => {\n      this.customRenderingMap = customRenderingMap; // likely same reference, so won't rerender\n\n      this.renderId++; // force rerender\n\n      getSecret(this).needCustomRenderingResize = true;\n    });\n  },\n\n  beforeUpdate() {\n    this.getApi().resumeRendering(); // the watcher handlers paused it\n  },\n\n  updated() {\n    if (getSecret(this).needCustomRenderingResize) {\n      getSecret(this).needCustomRenderingResize = false;\n      this.getApi().updateSize();\n    }\n  },\n\n  beforeUnmount() {\n    this.getApi().destroy();\n  },\n\n  watch: buildWatchers()\n});\nexport default FullCalendar; // Custom Rendering\n// -------------------------------------------------------------------------------------------------\n\nconst CustomRenderingComponent = defineComponent({\n  props: {\n    customRendering: Object\n  },\n\n  render() {\n    const customRendering = this.customRendering;\n    const innerContent = typeof customRendering.generatorMeta === 'function' ? customRendering.generatorMeta(customRendering.renderProps) : // vue-normalized slot function\n    customRendering.generatorMeta; // probably a vue JSX node returned from content-inject func\n\n    return h(Teleport, {\n      to: customRendering.containerEl\n    }, innerContent);\n  }\n\n}); // storing internal state:\n// https://github.com/vuejs/vue/issues/1988#issuecomment-163013818\n\nfunction getSecret(inst) {\n  return inst;\n}\n\nfunction buildWatchers() {\n  let watchers = {\n    // watches changes of ALL options and their nested objects,\n    // but this is only a means to be notified of top-level non-complex options changes.\n    options: {\n      deep: true,\n\n      handler(options) {\n        let calendar = this.getApi();\n        calendar.pauseRendering();\n        let calendarOptions = this.buildOptions(options);\n        calendar.resetOptions(calendarOptions);\n        this.renderId++; // will queue a rerender\n      }\n\n    }\n  };\n\n  for (let complexOptionName in OPTION_IS_COMPLEX) {\n    // handlers called when nested objects change\n    watchers[`options.${complexOptionName}`] = {\n      deep: true,\n\n      handler(val) {\n        // unfortunately the handler is called with undefined if new props were set, but the complex one wasn't ever set\n        if (val !== undefined) {\n          let calendar = this.getApi();\n          calendar.pauseRendering();\n          calendar.resetOptions({\n            [complexOptionName]: val\n          }, [complexOptionName]);\n          this.renderId++; // will queue a rerender\n        }\n      }\n\n    };\n  }\n\n  return watchers;\n} // General Utils\n// -------------------------------------------------------------------------------------------------\n\n\nfunction kebabToCamelKeys(map) {\n  const newMap = {};\n\n  for (const key in map) {\n    newMap[kebabToCamel(key)] = map[key];\n  }\n\n  return newMap;\n}\n\nfunction kebabToCamel(s) {\n  return s.split('-').map((word, index) => index ? capitalize(word) : word).join('');\n}\n\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}","map":{"version":3,"mappings":"AAAA,SAAmBA,eAAnB,EAAoCC,CAApC,EAAuCC,QAAvC,EAAiDC,QAAjD,QAAwE,KAAxE;AACA,SAASC,QAAT,QAA0C,oBAA1C;AACA,SAASC,oBAAT,QAAsD,6BAAtD;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,MAAMC,YAAY,GAAGP,eAAe,CAAC;EACnCQ,KAAK,EAAE;IACLC,OAAO,EAAEC;EADJ,CAD4B;;EAKnCC,IAAI;IACF,OAAO;MACLC,QAAQ,EAAE,CADL;MAELC,kBAAkB,EAAE,IAAIC,GAAJ;IAFf,CAAP;EAID,CAVkC;;EAYnCC,OAAO,EAAE;IACPC,MAAM;MACJ,OAAOC,SAAS,CAAC,IAAD,CAAT,CAAgBC,QAAvB;IACD,CAHM;;IAKPC,YAAY,CAACC,eAAD,EAA6C;MACvD,OAAO,EACL,GAAGA,eADE;QAELC,sBAAsB,EAAEC,gBAAgB,CAAC,KAAKC,MAAN,CAFnC;QAGLC,qBAAqB,EAAEP,SAAS,CAAC,IAAD,CAAT,CAAgBO;MAHlC,CAAP;IAKD;;EAXM,CAZ0B;;EA0BnCC,MAAM;IACJ,MAAMC,oBAAoB,GAAY,EAAtC;;IAEA,KAAK,MAAMC,eAAX,IAA8B,KAAKd,kBAAL,CAAwBe,MAAxB,EAA9B,EAAgE;MAC9DF,oBAAoB,CAACG,IAArB,CACE5B,CAAC,CAAC6B,wBAAD,EAA2B;QAC1BC,GAAG,EAAEJ,eAAe,CAACK,EADK;QAE1BL;MAF0B,CAA3B,CADH;IAMD;;IAED,OAAO1B,CAAC,CAAC,KAAD,EAAQ;MACd;MACAgC,KAAK,EAAE;QAAE,qBAAqB,KAAKrB;MAA5B;IAFO,CAAR,EAGLX,CAAC,CAACC,QAAD,EAAWwB,oBAAX,CAHI,CAAR,CAZI,CAekC;EACvC,CA1CkC;;EA4CnCQ,OAAO;IACL,MAAMC,oBAAoB,GAAG,IAAI9B,oBAAJ,EAA7B;IACAY,SAAS,CAAC,IAAD,CAAT,CAAgBO,qBAAhB,GAAwCW,oBAAoB,CAACC,MAArB,CAA4BC,IAA5B,CAAiCF,oBAAjC,CAAxC;IAEA,MAAMG,eAAe,GAAG,KAAKnB,YAAL,CAAkB,KAAKV,OAAvB,CAAxB;IACA,MAAMS,QAAQ,GAAG,IAAId,QAAJ,CAAa,KAAKmC,GAAlB,EAAsCD,eAAtC,CAAjB;IACArB,SAAS,CAAC,IAAD,CAAT,CAAgBC,QAAhB,GAA2BA,QAA3B;IAEAA,QAAQ,CAACO,MAAT;IACAU,oBAAoB,CAACK,SAArB,CAAgC3B,kBAAD,IAAuB;MACpD,KAAKA,kBAAL,GAA0BA,kBAA1B,CADoD,CACP;;MAC7C,KAAKD,QAAL,GAFoD,CAEpC;;MAChBK,SAAS,CAAC,IAAD,CAAT,CAAgBwB,yBAAhB,GAA4C,IAA5C;IACD,CAJD;EAKD,CA1DkC;;EA4DnCC,YAAY;IACV,KAAK1B,MAAL,GAAc2B,eAAd,GADU,CACsB;EACjC,CA9DkC;;EAgEnCC,OAAO;IACL,IAAI3B,SAAS,CAAC,IAAD,CAAT,CAAgBwB,yBAApB,EAA+C;MAC7CxB,SAAS,CAAC,IAAD,CAAT,CAAgBwB,yBAAhB,GAA4C,KAA5C;MACA,KAAKzB,MAAL,GAAc6B,UAAd;IACD;EACF,CArEkC;;EAuEnCC,aAAa;IACX,KAAK9B,MAAL,GAAc+B,OAAd;EACD,CAzEkC;;EA2EnCC,KAAK,EAAEC,aAAa;AA3Ee,CAAD,CAApC;AA8EA,eAAe1C,YAAf,C,CAEA;AACA;;AAEA,MAAMuB,wBAAwB,GAAG9B,eAAe,CAAC;EAC/CQ,KAAK,EAAE;IACLmB,eAAe,EAAEjB;EADZ,CADwC;;EAK/Ce,MAAM;IACJ,MAAME,eAAe,GAAG,KAAKA,eAA7B;IACA,MAAMuB,YAAY,GAAG,OAAOvB,eAAe,CAACwB,aAAvB,KAAyC,UAAzC,GACnBxB,eAAe,CAACwB,aAAhB,CAA8BxB,eAAe,CAACyB,WAA9C,CADmB,GAC0C;IAC7DzB,eAAe,CAACwB,aAFlB,CAFI,CAI4B;;IAEhC,OAAOlD,CAAC,CAACE,QAAD,EAAW;MAAEkD,EAAE,EAAE1B,eAAe,CAAC2B;IAAtB,CAAX,EAAgDJ,YAAhD,CAAR;EACD;;AAZ8C,CAAD,CAAhD,C,CA0BA;AACA;;AACA,SAASjC,SAAT,CAAmBsC,IAAnB,EAA6C;EAC3C,OAAOA,IAAP;AACD;;AAED,SAASN,aAAT,GAAsB;EAEpB,IAAIO,QAAQ,GAA8B;IAExC;IACA;IACA/C,OAAO,EAAE;MACPgD,IAAI,EAAE,IADC;;MAEPC,OAAO,CAA6BjD,OAA7B,EAAqD;QAC1D,IAAIS,QAAQ,GAAG,KAAKF,MAAL,EAAf;QACAE,QAAQ,CAACyC,cAAT;QAEA,IAAIrB,eAAe,GAAG,KAAKnB,YAAL,CAAkBV,OAAlB,CAAtB;QACAS,QAAQ,CAAC0C,YAAT,CAAsBtB,eAAtB;QAEA,KAAK1B,QAAL,GAP0D,CAO1C;MACjB;;IAVM;EAJ+B,CAA1C;;EAkBA,KAAK,IAAIiD,iBAAT,IAA8BvD,iBAA9B,EAAiD;IAE/C;IACAkD,QAAQ,CAAC,WAAWK,iBAAiB,EAA7B,CAAR,GAA2C;MACzCJ,IAAI,EAAE,IADmC;;MAEzCC,OAAO,CAA6BI,GAA7B,EAAqC;QAE1C;QACA,IAAIA,GAAG,KAAKC,SAAZ,EAAuB;UAErB,IAAI7C,QAAQ,GAAG,KAAKF,MAAL,EAAf;UACAE,QAAQ,CAACyC,cAAT;UACAzC,QAAQ,CAAC0C,YAAT,CAAsB;YACpB,CAACC,iBAAD,GAAqBC;UADD,CAAtB,EAEG,CAACD,iBAAD,CAFH;UAIA,KAAKjD,QAAL,GARqB,CAQL;QACjB;MACF;;IAfwC,CAA3C;EAiBD;;EAED,OAAO4C,QAAP;AACD,C,CAED;AACA;;;AAEA,SAASlC,gBAAT,CAA6B0C,GAA7B,EAAsD;EACpD,MAAMC,MAAM,GAAyB,EAArC;;EAEA,KAAK,MAAMlC,GAAX,IAAkBiC,GAAlB,EAAuB;IACrBC,MAAM,CAACC,YAAY,CAACnC,GAAD,CAAb,CAAN,GAA4BiC,GAAG,CAACjC,GAAD,CAA/B;EACD;;EAED,OAAOkC,MAAP;AACD;;AAED,SAASC,YAAT,CAAsBC,CAAtB,EAA+B;EAC7B,OAAOA,CAAC,CACLC,KADI,CACE,GADF,EAEJJ,GAFI,CAEA,CAACK,IAAD,EAAOC,KAAP,KAAiBA,KAAK,GAAGC,UAAU,CAACF,IAAD,CAAb,GAAsBA,IAF5C,EAGJG,IAHI,CAGC,EAHD,CAAP;AAID;;AAED,SAASD,UAAT,CAAoBJ,CAApB,EAA6B;EAC3B,OAAOA,CAAC,CAACM,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BP,CAAC,CAACQ,KAAF,CAAQ,CAAR,CAAnC;AACD","names":["defineComponent","h","Fragment","Teleport","Calendar","CustomRenderingStore","OPTION_IS_COMPLEX","FullCalendar","props","options","Object","data","renderId","customRenderingMap","Map","methods","getApi","getSecret","calendar","buildOptions","suppliedOptions","customRenderingMetaMap","kebabToCamelKeys","$slots","handleCustomRendering","render","customRenderingNodes","customRendering","values","push","CustomRenderingComponent","key","id","attrs","mounted","customRenderingStore","handle","bind","calendarOptions","$el","subscribe","needCustomRenderingResize","beforeUpdate","resumeRendering","updated","updateSize","beforeUnmount","destroy","watch","buildWatchers","innerContent","generatorMeta","renderProps","to","containerEl","inst","watchers","deep","handler","pauseRendering","resetOptions","complexOptionName","val","undefined","map","newMap","kebabToCamel","s","split","word","index","capitalize","join","charAt","toUpperCase","slice"],"sourceRoot":"","sources":["../src/FullCalendar.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}