{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nclass TableView extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.headerElRef = createRef();\n  }\n\n  renderSimpleLayout(headerRowContent, bodyContent) {\n    let {\n      props,\n      context\n    } = this;\n    let sections = [];\n    let stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewContainer, {\n      elClasses: ['fc-daygrid'],\n      viewSpec: context.viewSpec\n    }, createElement(SimpleScrollGrid, {\n      liquid: !props.isHeightAuto && !props.forPrint,\n      collapsibleWidth: props.forPrint,\n      cols: []\n      /* TODO: make optional? */\n      ,\n      sections: sections\n    }));\n  }\n\n  renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    let {\n      props,\n      context\n    } = this;\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    let sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewContainer, {\n      elClasses: ['fc-daygrid'],\n      viewSpec: context.viewSpec\n    }, createElement(ScrollGrid, {\n      liquid: !props.isHeightAuto && !props.forPrint,\n      forPrint: props.forPrint,\n      collapsibleWidth: props.forPrint,\n      colGroups: [{\n        cols: [{\n          span: colCnt,\n          minWidth: dayMinWidth\n        }]\n      }],\n      sections: sections\n    }));\n  }\n\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n  let byRow = [];\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg);\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  let byCol = [];\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg);\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  let byRow = [];\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  let {\n    display\n  } = seg.eventRange.ui;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nclass TableBlockEvent extends BaseComponent {\n  render() {\n    let {\n      props\n    } = this;\n    return createElement(StandardEvent, Object.assign({}, props, {\n      elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  }\n\n}\n\nclass TableListItemEvent extends BaseComponent {\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let {\n      seg\n    } = props;\n    let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventContainer, Object.assign({}, props, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'],\n      elAttrs: getSegAnchorAttrs(props.seg, context),\n      defaultGenerator: renderInnerContent,\n      timeText: timeText,\n      isResizing: false,\n      isDateSelecting: false\n    }));\n  }\n\n}\n\nfunction renderInnerContent(renderProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: renderProps.borderColor || renderProps.backgroundColor\n    }\n  }), renderProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, renderProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.compileSegs = memoize(compileSegs);\n  }\n\n  render() {\n    let {\n      props\n    } = this;\n    let {\n      allSegs,\n      invisibleSegs\n    } = this.compileSegs(props.singlePlacements);\n    return createElement(MoreLinkContainer, {\n      elClasses: ['fc-daygrid-more-link'],\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      allDayDate: props.allDayDate,\n      moreCnt: props.moreCnt,\n      allSegs: allSegs,\n      hiddenSegs: invisibleSegs,\n      alignmentElRef: props.alignmentElRef,\n      alignGridTop: props.alignGridTop,\n      extraDateSpan: props.extraDateSpan,\n      popoverContent: () => {\n        let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n        return createElement(Fragment, null, allSegs.map(seg => {\n          let instanceId = seg.eventRange.instance.instanceId;\n          return createElement(\"div\", {\n            className: \"fc-daygrid-event-harness\",\n            key: instanceId,\n            style: {\n              visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n            }\n          }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n            seg: seg,\n            isDragging: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, Object.assign({\n            seg: seg,\n            isDragging: false,\n            isResizing: false,\n            isDateSelecting: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))));\n        }));\n      }\n    });\n  }\n\n}\n\nfunction compileSegs(singlePlacements) {\n  let allSegs = [];\n  let invisibleSegs = [];\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg);\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg);\n    }\n  }\n\n  return {\n    allSegs,\n    invisibleSegs\n  };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nclass TableCell extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.rootElRef = createRef();\n    this.state = {\n      dayNumberId: getUniqueDomId()\n    };\n\n    this.handleRootEl = el => {\n      setRef(this.rootElRef, el);\n      setRef(this.props.elRef, el);\n    };\n  }\n\n  render() {\n    let {\n      context,\n      props,\n      state,\n      rootElRef\n    } = this;\n    let {\n      options,\n      dateEnv\n    } = context;\n    let {\n      date,\n      dateProfile\n    } = props; // TODO: memoize this?\n\n    const isMonthStart = props.showDayNumber && shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n    return createElement(DayCellContainer, {\n      elTag: \"td\",\n      elRef: this.handleRootEl,\n      elClasses: ['fc-daygrid-day', ...(props.extraClassNames || [])],\n      elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), props.showDayNumber ? {\n        'aria-labelledby': state.dayNumberId\n      } : {}), {\n        role: 'gridcell'\n      }),\n      defaultGenerator: renderTopInner,\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      isMonthStart: isMonthStart,\n      extraRenderProps: props.extraRenderProps\n    }, (InnerContent, renderProps) => createElement(\"div\", {\n      ref: props.innerElRef,\n      className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n      style: {\n        minHeight: props.minHeight\n      }\n    }, props.showWeekNumber && createElement(WeekNumberContainer, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-week-number'],\n      elAttrs: buildNavLinkAttrs(context, date, 'week'),\n      date: date,\n      defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n    }), !renderProps.isDisabled && (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? createElement(\"div\", {\n      className: \"fc-daygrid-day-top\"\n    }, createElement(InnerContent, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-day-number', isMonthStart && 'fc-daygrid-month-start'],\n      elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), {\n        id: state.dayNumberId\n      })\n    })) : props.showDayNumber ? // for creating correct amount of space (see issue #7162)\n    createElement(\"div\", {\n      className: \"fc-daygrid-day-top\",\n      style: {\n        visibility: 'hidden'\n      }\n    }, createElement(\"a\", {\n      className: \"fc-daygrid-day-number\"\n    }, \"\\u00A0\")) : undefined, createElement(\"div\", {\n      className: \"fc-daygrid-day-events\",\n      ref: props.fgContentElRef\n    }, props.fgContent, createElement(\"div\", {\n      className: \"fc-daygrid-day-bottom\",\n      style: {\n        marginTop: props.moreMarginTop\n      }\n    }, createElement(TableCellMoreLink, {\n      allDayDate: date,\n      singlePlacements: props.singlePlacements,\n      moreCnt: props.moreCnt,\n      alignmentElRef: rootElRef,\n      alignGridTop: !props.showDayNumber,\n      extraDateSpan: props.extraDateSpan,\n      dateProfile: props.dateProfile,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      todayRange: props.todayRange\n    }))), createElement(\"div\", {\n      className: \"fc-daygrid-day-bg\"\n    }, props.bgContent)));\n  }\n\n}\n\nfunction renderTopInner(props) {\n  return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\n\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n  const {\n    start: currentStart,\n    end: currentEnd\n  } = currentRange;\n  const currentEndIncl = addMs(currentEnd, -1);\n  const currentFirstYear = dateEnv.getYear(currentStart);\n  const currentFirstMonth = dateEnv.getMonth(currentStart);\n  const currentLastYear = dateEnv.getYear(currentEndIncl);\n  const currentLastMonth = dateEnv.getMonth(currentEndIncl); // spans more than one month?\n\n  return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) && Boolean( // first date in current view?\n  date.valueOf() === currentStart.valueOf() || // a month-start that's within the current range?\n  dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf());\n}\n\nfunction generateSegKey(seg) {\n  return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\n\nfunction generateSegUid(seg) {\n  return generateSegKey(seg) + ':' + seg.lastCol;\n}\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n  let hierarchy = new DayGridSegHierarchy(segEntry => {\n    // TODO: more DRY with generateSegUid\n    let segUid = segs[segEntry.index].eventRange.instance.instanceId + ':' + segEntry.span.start + ':' + (segEntry.span.end - 1); // if no thickness known, assume 1 (if 0, so small it always fits)\n\n    return segHeights[segUid] || 1;\n  });\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  } // create segInputs only for segs with known heights\n\n\n  let segInputs = [];\n  let unknownHeightSegs = [];\n\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i];\n    let segUid = generateSegUid(seg);\n    let eventHeight = segHeights[segUid];\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs);\n  let segRects = hierarchy.toRects();\n  let {\n    singleColPlacements,\n    multiColPlacements,\n    leftoverMargins\n  } = placeRects(segRects, segs, cells);\n  let moreCnts = [];\n  let moreMarginTops = []; // add segs with unknown heights\n\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // add the hidden entries\n\n\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0);\n  }\n\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index];\n    let hiddenSpan = hiddenEntry.span;\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1;\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // deal with leftover margins\n\n\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col]);\n  }\n\n  return {\n    singleColPlacements,\n    multiColPlacements,\n    moreCnts,\n    moreMarginTops\n  };\n} // rects ordered by top coord, then left\n\n\nfunction placeRects(allRects, segs, cells) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  let singleColPlacements = [];\n  let multiColPlacements = [];\n  let leftoverMargins = [];\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]; // compute all static segs in singlePlacements\n\n    let singlePlacements = [];\n    let currentHeight = 0;\n    let currentMarginTop = 0;\n\n    for (let rect of rects) {\n      let seg = segs[rect.index];\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight\n      });\n      currentHeight = rect.levelCoord + rect.thickness;\n    } // compute mixed static/absolute segs in multiPlacements\n\n\n    let multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n\n    for (let rect of rects) {\n      let seg = segs[rect.index];\n      let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n\n      let isFirstCol = rect.span.start === col;\n      currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n\n      currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness;\n\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0\n          });\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop // claim the margin\n\n        });\n        currentMarginTop = 0;\n      }\n    }\n\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n\n  return {\n    singleColPlacements,\n    multiColPlacements,\n    leftoverMargins\n  };\n}\n\nfunction groupRectsByEachCol(rects, colCnt) {\n  let rectsByEachCol = [];\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect);\n    }\n  }\n\n  return rectsByEachCol;\n}\n\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n\n  let eventRange = seg.eventRange;\n  let origRange = eventRange.range;\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return Object.assign(Object.assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: Object.assign(Object.assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  constructor() {\n    super(...arguments); // config\n\n    this.hiddenConsumes = false; // allows us to keep hidden entries in the hierarchy so they take up space\n\n    this.forceHidden = {};\n  }\n\n  addSegs(segInputs) {\n    const hiddenSegs = super.addSegs(segInputs);\n    const {\n      entriesByLevel\n    } = this;\n\n    const excludeHidden = entry => !this.forceHidden[buildEntryKey(entry)]; // remove the forced-hidden segs\n\n\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n    }\n\n    return hiddenSegs;\n  }\n\n  handleInvalidInsertion(insertion, entry, hiddenEntries) {\n    const {\n      entriesByLevel,\n      forceHidden\n    } = this;\n    const {\n      touchingEntry,\n      touchingLevel,\n      touchingLateral\n    } = insertion; // the entry that the new insertion is touching must be hidden\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry);\n\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          // split up the touchingEntry, reinsert it\n          const hiddenEntry = Object.assign(Object.assign({}, touchingEntry), {\n            span: intersectSpans(touchingEntry.span, entry.span)\n          }); // reinsert the area that turned into a \"more\" link (so no other entries try to\n          // occupy the space) but mark it forced-hidden\n\n          const hiddenEntryId = buildEntryKey(hiddenEntry);\n          forceHidden[hiddenEntryId] = true;\n          entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n          hiddenEntries.push(hiddenEntry);\n          this.splitEntry(touchingEntry, entry, hiddenEntries);\n        } else {\n          forceHidden[touchingEntryId] = true;\n          hiddenEntries.push(touchingEntry);\n        }\n      }\n    } // will try to reslice...\n\n\n    super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n  }\n\n}\n\nclass TableRow extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.cellElRefs = new RefMap(); // the <td>\n\n    this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    this.rootElRef = createRef();\n    this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      segHeights: {}\n    };\n\n    this.handleResize = isForced => {\n      if (isForced) {\n        this.updateSizing(true); // isExternal=true\n      }\n    };\n  }\n\n  render() {\n    let {\n      props,\n      state,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let colCnt = props.cells.length;\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n    let {\n      singleColPlacements,\n      multiColPlacements,\n      moreCnts,\n      moreMarginTops\n    } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n    let isForcedInvisible = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef,\n      role: \"row\"\n    }, props.renderIntro && props.renderIntro(), props.cells.map((cell, col) => {\n      let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n      let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: this.cellElRefs.createRef(cell.key),\n        innerElRef: this.frameElRefs.createRef(cell.key)\n        /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n        ,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers\n        /* even displaying weeknum for row, not necessarily day */\n        ,\n        todayRange: props.todayRange,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        extraRenderProps: cell.extraRenderProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        moreCnt: moreCnts[col],\n        moreMarginTop: moreMarginTops[col],\n        singlePlacements: singleColPlacements[col],\n        fgContentElRef: this.fgElRefs.createRef(cell.key),\n        fgContent: // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent: // Fragment scopes the keys\n        createElement(Fragment, null, this.renderFillSegs(highlightSegsByCol[col], 'highlight'), this.renderFillSegs(businessHoursByCol[col], 'non-business'), this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')),\n        minHeight: props.cellMinHeight\n      });\n    }));\n  }\n\n  componentDidMount() {\n    this.updateSizing(true);\n    this.context.addResizeHandler(this.handleResize);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleResize);\n  }\n\n  getHighlightSegs() {\n    let {\n      props\n    } = this;\n\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return props.dateSelectionSegs;\n  }\n\n  getMirrorSegs() {\n    let {\n      props\n    } = this;\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return [];\n  }\n\n  renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n    let {\n      context\n    } = this;\n    let {\n      eventSelection\n    } = this.props;\n    let {\n      framePositions\n    } = this.state;\n    let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n    let isMirror = isDragging || isResizing || isDateSelecting;\n    let nodes = [];\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let {\n          seg\n        } = placement;\n        let {\n          instanceId\n        } = seg.eventRange.instance;\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n        let isAbsolute = placement.isAbsolute;\n        let left = '';\n        let right = '';\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n\n\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: generateSegKey(seg),\n          ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)),\n          style: {\n            visibility: isVisible ? '' : 'hidden',\n            marginTop: isAbsolute ? '' : placement.marginTop,\n            top: isAbsolute ? placement.absoluteTop : '',\n            left,\n            right\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n\n    return nodes;\n  }\n\n  renderFillSegs(segs, fillType) {\n    let {\n      isRtl\n    } = this.context;\n    let {\n      todayRange\n    } = this.props;\n    let {\n      framePositions\n    } = this.state;\n    let nodes = [];\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes);\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let {\n      props,\n      state,\n      frameElRefs\n    } = this;\n\n    if (!props.forPrint && props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map(cell => frameElRefs.currentMap[cell.key]);\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current;\n          let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n          false);\n\n          if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n            this.setState({\n              framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n              false)\n            });\n          }\n        }\n      }\n\n      const oldSegHeights = this.state.segHeights;\n      const newSegHeights = this.querySegHeights();\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  }\n\n  querySegHeights() {\n    let segElMap = this.segHarnessRefs.currentMap;\n    let segHeights = {}; // get the max height amongst instance segs\n\n    for (let segUid in segElMap) {\n      let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n      segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n    }\n\n    return segHeights;\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key;\n    let cellEl = this.cellElRefs.currentMap[firstKey];\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  }\n\n  getCellEls() {\n    let elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(cell => elMap[cell.key]);\n  }\n\n}\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual\n});\n\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n\n  return mirrorSegs.map(seg => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0\n  }));\n}\n\nfunction buildAbsoluteTopHash(colPlacements) {\n  let topsByInstanceId = {};\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n    }\n  }\n\n  return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    this.splitBgEventSegs = memoize(splitSegsByRow);\n    this.splitFgEventSegs = memoize(splitSegsByRow);\n    this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    this.splitEventDrag = memoize(splitInteractionByRow);\n    this.splitEventResize = memoize(splitInteractionByRow);\n    this.rowRefs = new RefMap();\n  }\n\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let rowCnt = props.cells.length;\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt); // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n    // choose 7 because a month view will have max 6 rows\n\n    let cellMinHeight = rowCnt >= 7 && props.clientWidth ? props.clientWidth / context.options.aspectRatio / 6 : null;\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, (nowDate, todayRange) => createElement(Fragment, null, props.cells.map((cells, row) => createElement(TableRow, {\n      ref: this.rowRefs.createRef(row),\n      key: cells.length ? cells[0].date.toISOString()\n      /* best? or put key on cell? or use diff formatter? */\n      : row // in case there are no cells (like when resource view is loading)\n      ,\n      showDayNumbers: rowCnt > 1,\n      showWeekNumbers: props.showWeekNumbers,\n      todayRange: todayRange,\n      dateProfile: props.dateProfile,\n      cells: cells,\n      renderIntro: props.renderRowIntro,\n      businessHourSegs: businessHourSegsByRow[row],\n      eventSelection: props.eventSelection,\n      bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n      /* hack */\n      ,\n      fgEventSegs: fgEventSegsByRow[row],\n      dateSelectionSegs: dateSelectionSegsByRow[row],\n      eventDrag: eventDragByRow[row],\n      eventResize: eventResizeByRow[row],\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      cellMinHeight: cellMinHeight,\n      forPrint: props.forPrint\n    }))));\n  }\n\n  componentDidMount() {\n    this.registerInteractiveComponent();\n  }\n\n  componentDidUpdate() {\n    // for if started with zero cells\n    this.registerInteractiveComponent();\n  }\n\n  registerInteractiveComponent() {\n    if (!this.rootEl) {\n      // HACK: need a daygrid wrapper parent to do positioning\n      // NOTE: a daygrid resource view w/o resources can have zero cells\n      const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n      const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n\n      if (rootEl) {\n        this.rootEl = rootEl;\n        this.context.registerInteractiveComponent(this, {\n          el: rootEl,\n          isHitComboAllowed: this.props.isHitComboAllowed\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.rootEl) {\n      this.context.unregisterInteractiveComponent(this);\n      this.rootEl = null;\n    }\n  } // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(rowObj => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n    true, // horizontal\n    false);\n  }\n\n  queryHit(positionLeft, positionTop) {\n    let {\n      colPositions,\n      rowPositions\n    } = this;\n    let col = colPositions.leftToIndex(positionLeft);\n    let row = rowPositions.topToIndex(positionTop);\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col];\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: Object.assign({\n          range: this.getCellRange(row, col),\n          allDay: true\n        }, cell.extraDateSpan),\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  }\n\n  getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  }\n\n  getCellRange(row, col) {\n    let start = this.props.cells[row][col].date;\n    let end = addDays(start, 1);\n    return {\n      start,\n      end\n    };\n  }\n\n}\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.elRef = createRef();\n    this.needsScrollReset = false;\n  }\n\n  render() {\n    let {\n      props\n    } = this;\n    let {\n      dayMaxEventRows,\n      dayMaxEvents,\n      expandRows\n    } = props;\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n\n    let classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n    ];\n    return createElement(\"div\", {\n      ref: this.elRef,\n      className: classNames.join(' '),\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(\"table\", {\n      role: \"presentation\",\n      className: \"fc-scrollgrid-sync-table\",\n      style: {\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth,\n        height: expandRows ? props.clientHeight : ''\n      }\n    }, props.colGroupNode, createElement(\"tbody\", {\n      role: \"presentation\"\n    }, createElement(TableRows, {\n      dateProfile: props.dateProfile,\n      cells: props.cells,\n      renderRowIntro: props.renderRowIntro,\n      showWeekNumbers: props.showWeekNumbers,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      businessHourSegs: props.businessHourSegs,\n      bgEventSegs: props.bgEventSegs,\n      fgEventSegs: props.fgEventSegs,\n      dateSelectionSegs: props.dateSelectionSegs,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      dayMaxEvents: dayMaxEvents,\n      dayMaxEventRows: dayMaxEventRows,\n      forPrint: props.forPrint,\n      isHitComboAllowed: props.isHitComboAllowed\n    }))));\n  }\n\n  componentDidMount() {\n    this.requestScrollReset();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.dateProfile !== this.props.dateProfile) {\n      this.requestScrollReset();\n    } else {\n      this.flushScrollReset();\n    }\n  }\n\n  requestScrollReset() {\n    this.needsScrollReset = true;\n    this.flushScrollReset();\n  }\n\n  flushScrollReset() {\n    if (this.needsScrollReset && this.props.clientWidth // sizes computed?\n    ) {\n      const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n\n      if (subjectEl) {\n        const originEl = subjectEl.closest('.fc-daygrid-body');\n        const scrollEl = originEl.closest('.fc-scroller');\n        const scrollTop = subjectEl.getBoundingClientRect().top - originEl.getBoundingClientRect().top;\n        scrollEl.scrollTop = scrollTop ? scrollTop + 1 : 0; // overcome border\n      }\n\n      this.needsScrollReset = false;\n    }\n  }\n\n}\n\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n  let el;\n\n  if (dateProfile.currentRangeUnit.match(/year|month/)) {\n    el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`); // even if view is month-based, first-of-month might be hidden...\n  }\n\n  if (!el) {\n    el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`); // could still be hidden if an interior-view hidden day\n  }\n\n  return el;\n}\n\nclass DayTableSlicer extends Slicer {\n  constructor() {\n    super(...arguments);\n    this.forceDayIfListItem = true;\n  }\n\n  sliceRange(dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  }\n\n}\n\nclass DayTable extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.slicer = new DayTableSlicer();\n    this.tableRef = createRef();\n  }\n\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    return createElement(Table, Object.assign({\n      ref: this.tableRef\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  }\n\n}\n\nclass DayTableView extends TableView {\n  constructor() {\n    super(...arguments);\n    this.buildDayTableModel = memoize(buildDayTableModel);\n    this.headerRef = createRef();\n    this.tableRef = createRef(); // can't override any lifecycle methods from parent\n  }\n\n  render() {\n    let {\n      options,\n      dateProfileGenerator\n    } = this.context;\n    let {\n      props\n    } = this;\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    let headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n\n    let bodyContent = contentArg => createElement(DayTable, {\n      ref: this.tableRef,\n      dateProfile: props.dateProfile,\n      dayTableModel: dayTableModel,\n      businessHours: props.businessHours,\n      dateSelection: props.dateSelection,\n      eventStore: props.eventStore,\n      eventUiBases: props.eventUiBases,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      nextDayThreshold: options.nextDayThreshold,\n      colGroupNode: contentArg.tableColGroupNode,\n      tableMinWidth: contentArg.tableMinWidth,\n      dayMaxEvents: options.dayMaxEvents,\n      dayMaxEventRows: options.dayMaxEventRows,\n      showWeekNumbers: options.weekNumbers,\n      expandRows: !props.isHeightAuto,\n      headerAlignElRef: this.headerElRef,\n      clientWidth: contentArg.clientWidth,\n      clientHeight: contentArg.clientHeight,\n      forPrint: props.forPrint\n    });\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  }\n\n}\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n    let {\n      props\n    } = this;\n    return buildDayTableRenderRange({\n      currentRange: renderRange,\n      snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n      fixedWeekCount: props.fixedWeekCount,\n      dateEnv: props.dateEnv\n    });\n  }\n\n}\n\nfunction buildDayTableRenderRange(props) {\n  let {\n    dateEnv,\n    currentRange\n  } = props;\n  let {\n    start,\n    end\n  } = currentRange;\n  let endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n  if (props.snapToWeek) {\n    start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n    endOfWeek = dateEnv.startOfWeek(end);\n\n    if (endOfWeek.valueOf() !== end.valueOf()) {\n      end = addWeeks(endOfWeek, 1);\n    }\n  } // ensure 6 weeks\n\n\n  if (props.fixedWeekCount) {\n    // TODO: instead of these date-math gymnastics (for multimonth view),\n    // compute dateprofiles of all months, then use start of first and end of last.\n    let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n    let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n    diffWeeks(lastMonthRenderStart, end));\n    end = addWeeks(end, 6 - rowCnt);\n  }\n\n  return {\n    start,\n    end\n  };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };","map":{"version":3,"names":["DateComponent","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","renderScrollShim","createFormatter","BaseComponent","StandardEvent","buildSegTimeText","EventContainer","getSegAnchorAttrs","memoize","MoreLinkContainer","getSegMeta","getUniqueDomId","setRef","DayCellContainer","WeekNumberContainer","buildNavLinkAttrs","hasCustomDayCellContent","addMs","intersectRanges","addDays","SegHierarchy","buildEntryKey","intersectSpans","RefMap","sortEventSegs","isPropsEqual","buildEventRangeKey","BgEvent","renderFill","PositionCache","NowTimer","formatIsoMonthStr","formatDayString","Slicer","DayHeader","DaySeriesModel","DayTableModel","DateProfileGenerator","addWeeks","diffWeeks","injectStyles","createRef","createElement","Fragment","TableView","constructor","arguments","headerElRef","renderSimpleLayout","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","tableClassName","rowContent","liquid","content","elClasses","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","chunks","colGroups","span","minWidth","splitSegsByRow","segs","rowCnt","byRow","i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","DEFAULT_TABLE_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","render","Object","assign","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","elTag","elAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","compileSegs","allSegs","invisibleSegs","singlePlacements","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","rootElRef","state","dayNumberId","handleRootEl","el","dateEnv","date","isMonthStart","showDayNumber","shouldDisplayMonthStart","currentRange","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","defaultFormat","isDisabled","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","start","currentStart","end","currentEnd","currentEndIncl","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","index","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","hiddenEntries","addSegs","segRects","toRects","singleColPlacements","multiColPlacements","leftoverMargins","placeRects","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","thickness","multiPlacements","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","durationEditable","forceHidden","entriesByLevel","excludeHidden","entry","level","filter","handleInvalidInsertion","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","hiddenEntryId","splitEntry","TableRow","cellElRefs","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","componentDidMount","addResizeHandler","componentDidUpdate","prevProps","prevState","currentProps","componentWillUnmount","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","getCellEls","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","TableRows","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","closest","isHitComboAllowed","unregisterInteractiveComponent","prepareHits","rowPositions","collect","rowObj","colPositions","queryHit","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","getScrollSubjectEl","scrollEl","scrollTop","containerEl","currentRangeUnit","match","querySelector","currentDate","DayTableSlicer","forceDayIfListItem","sliceRange","dateRange","dayTableModel","DayTable","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","DayTableView","buildDayTableModel","headerRef","dateProfileGenerator","headerContent","dayHeaders","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","daySeries","renderRange","test","TableDateProfileGenerator","buildRenderRange","isRangeAllDay","buildDayTableRenderRange","snapToWeek","fixedWeekCount","endOfWeek","startOfWeek","lastMonthRenderStart","startOfMonth","ceil","css_248z","DayGridView"],"sources":["/home/pat/Repositories/caretrackplus/node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        // if no thickness known, assume 1 (if 0, so small it always fits)\n        return segHeights[segUid] || 1;\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        // the entry that the new insertion is touching must be hidden\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    // split up the touchingEntry, reinsert it\n                    const hiddenEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    // reinsert the area that turned into a \"more\" link (so no other entries try to\n                    // occupy the space) but mark it forced-hidden\n                    const hiddenEntryId = buildEntryKey(hiddenEntry);\n                    forceHidden[hiddenEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n                    hiddenEntries.push(hiddenEntry);\n                    this.splitEntry(touchingEntry, entry, hiddenEntries);\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        // will try to reslice...\n        super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,oBAAxB,EAA8CC,aAA9C,EAA6DC,gBAA7D,EAA+EC,wBAA/E,EAAyGC,gBAAzG,EAA2HC,eAA3H,EAA4IC,aAA5I,EAA2JC,aAA3J,EAA0KC,gBAA1K,EAA4LC,cAA5L,EAA4MC,iBAA5M,EAA+NC,OAA/N,EAAwOC,iBAAxO,EAA2PC,UAA3P,EAAuQC,cAAvQ,EAAuRC,MAAvR,EAA+RC,gBAA/R,EAAiTC,mBAAjT,EAAsUC,iBAAtU,EAAyVC,uBAAzV,EAAkXC,KAAlX,EAAyXC,eAAzX,EAA0YC,OAA1Y,EAAmZC,YAAnZ,EAAiaC,aAAja,EAAgbC,cAAhb,EAAgcC,MAAhc,EAAwcC,aAAxc,EAAudC,YAAvd,EAAqeC,kBAAre,EAAyfC,OAAzf,EAAkgBC,UAAlgB,EAA8gBC,aAA9gB,EAA6hBC,QAA7hB,EAAuiBC,iBAAviB,EAA0jBC,eAA1jB,EAA2kBC,MAA3kB,EAAmlBC,SAAnlB,EAA8lBC,cAA9lB,EAA8mBC,aAA9mB,EAA6nBC,oBAA7nB,EAAmpBC,QAAnpB,EAA6pBC,SAA7pB,EAAwqBC,YAAxqB,QAA4rB,gCAA5rB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,QAAnC,QAAmD,8BAAnD;AAEA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBhD,aAAxB,CAAsC;EAClCiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,WAAL,GAAmBN,SAAS,EAA5B;EACH;;EACDO,kBAAkB,CAACC,gBAAD,EAAmBC,WAAnB,EAAgC;IAC9C,IAAI;MAAEC,KAAF;MAASC;IAAT,IAAqB,IAAzB;IACA,IAAIC,QAAQ,GAAG,EAAf;IACA,IAAIC,iBAAiB,GAAGzD,oBAAoB,CAACuD,OAAO,CAACG,OAAT,CAA5C;;IACA,IAAIN,gBAAJ,EAAsB;MAClBI,QAAQ,CAACG,IAAT,CAAc;QACVC,IAAI,EAAE,QADI;QAEVC,GAAG,EAAE,QAFK;QAGVC,QAAQ,EAAEL,iBAHA;QAIVM,KAAK,EAAE;UACHC,KAAK,EAAE,KAAKd,WADT;UAEHe,cAAc,EAAE,eAFb;UAGHC,UAAU,EAAEd;QAHT;MAJG,CAAd;IAUH;;IACDI,QAAQ,CAACG,IAAT,CAAc;MACVC,IAAI,EAAE,MADI;MAEVC,GAAG,EAAE,MAFK;MAGVM,MAAM,EAAE,IAHE;MAIVJ,KAAK,EAAE;QAAEK,OAAO,EAAEf;MAAX;IAJG,CAAd;IAMA,OAAQR,aAAa,CAAC5C,aAAD,EAAgB;MAAEoE,SAAS,EAAE,CAAC,YAAD,CAAb;MAA6BC,QAAQ,EAAEf,OAAO,CAACe;IAA/C,CAAhB,EACjBzB,aAAa,CAAC3C,gBAAD,EAAmB;MAAEiE,MAAM,EAAE,CAACb,KAAK,CAACiB,YAAP,IAAuB,CAACjB,KAAK,CAACkB,QAAxC;MAAkDC,gBAAgB,EAAEnB,KAAK,CAACkB,QAA1E;MAAoFE,IAAI,EAAE;MAAG;MAA7F;MAAyHlB,QAAQ,EAAEA;IAAnI,CAAnB,CADI,CAArB;EAEH;;EACDmB,mBAAmB,CAACvB,gBAAD,EAAmBC,WAAnB,EAAgCuB,MAAhC,EAAwCC,WAAxC,EAAqD;IACpE,IAAIC,UAAU,GAAG,KAAKvB,OAAL,CAAawB,WAAb,CAAyBC,cAA1C;;IACA,IAAI,CAACF,UAAL,EAAiB;MACb,MAAM,IAAIG,KAAJ,CAAU,8BAAV,CAAN;IACH;;IACD,IAAI;MAAE3B,KAAF;MAASC;IAAT,IAAqB,IAAzB;IACA,IAAIE,iBAAiB,GAAG,CAACH,KAAK,CAACkB,QAAP,IAAmBxE,oBAAoB,CAACuD,OAAO,CAACG,OAAT,CAA/D;IACA,IAAIwB,qBAAqB,GAAG,CAAC5B,KAAK,CAACkB,QAAP,IAAmBrE,wBAAwB,CAACoD,OAAO,CAACG,OAAT,CAAvE;IACA,IAAIF,QAAQ,GAAG,EAAf;;IACA,IAAIJ,gBAAJ,EAAsB;MAClBI,QAAQ,CAACG,IAAT,CAAc;QACVC,IAAI,EAAE,QADI;QAEVC,GAAG,EAAE,QAFK;QAGVC,QAAQ,EAAEL,iBAHA;QAIV0B,MAAM,EAAE,CAAC;UACDtB,GAAG,EAAE,MADJ;UAEDG,KAAK,EAAE,KAAKd,WAFX;UAGDe,cAAc,EAAE,eAHf;UAIDC,UAAU,EAAEd;QAJX,CAAD;MAJE,CAAd;IAWH;;IACDI,QAAQ,CAACG,IAAT,CAAc;MACVC,IAAI,EAAE,MADI;MAEVC,GAAG,EAAE,MAFK;MAGVM,MAAM,EAAE,IAHE;MAIVgB,MAAM,EAAE,CAAC;QACDtB,GAAG,EAAE,MADJ;QAEDO,OAAO,EAAEf;MAFR,CAAD;IAJE,CAAd;;IASA,IAAI6B,qBAAJ,EAA2B;MACvB1B,QAAQ,CAACG,IAAT,CAAc;QACVC,IAAI,EAAE,QADI;QAEVC,GAAG,EAAE,QAFK;QAGVC,QAAQ,EAAE,IAHA;QAIVqB,MAAM,EAAE,CAAC;UACDtB,GAAG,EAAE,MADJ;UAEDO,OAAO,EAAEhE;QAFR,CAAD;MAJE,CAAd;IASH;;IACD,OAAQyC,aAAa,CAAC5C,aAAD,EAAgB;MAAEoE,SAAS,EAAE,CAAC,YAAD,CAAb;MAA6BC,QAAQ,EAAEf,OAAO,CAACe;IAA/C,CAAhB,EACjBzB,aAAa,CAACiC,UAAD,EAAa;MAAEX,MAAM,EAAE,CAACb,KAAK,CAACiB,YAAP,IAAuB,CAACjB,KAAK,CAACkB,QAAxC;MAAkDA,QAAQ,EAAElB,KAAK,CAACkB,QAAlE;MAA4EC,gBAAgB,EAAEnB,KAAK,CAACkB,QAApG;MAA8GY,SAAS,EAAE,CAAC;QAAEV,IAAI,EAAE,CAAC;UAAEW,IAAI,EAAET,MAAR;UAAgBU,QAAQ,EAAET;QAA1B,CAAD;MAAR,CAAD,CAAzH;MAAgLrB,QAAQ,EAAEA;IAA1L,CAAb,CADI,CAArB;EAEH;;AA1EiC;;AA6EtC,SAAS+B,cAAT,CAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;EAClC,IAAIC,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;IAChCD,KAAK,CAACC,CAAD,CAAL,GAAW,EAAX;EACH;;EACD,KAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;IAClBE,KAAK,CAACE,GAAG,CAACC,GAAL,CAAL,CAAelC,IAAf,CAAoBiC,GAApB;EACH;;EACD,OAAOF,KAAP;AACH;;AACD,SAASI,mBAAT,CAA6BN,IAA7B,EAAmCZ,MAAnC,EAA2C;EACvC,IAAImB,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAApB,EAA4Be,CAAC,IAAI,CAAjC,EAAoC;IAChCI,KAAK,CAACJ,CAAD,CAAL,GAAW,EAAX;EACH;;EACD,KAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;IAClBO,KAAK,CAACH,GAAG,CAACI,QAAL,CAAL,CAAoBrC,IAApB,CAAyBiC,GAAzB;EACH;;EACD,OAAOG,KAAP;AACH;;AACD,SAASE,qBAAT,CAA+BC,EAA/B,EAAmCT,MAAnC,EAA2C;EACvC,IAAIC,KAAK,GAAG,EAAZ;;EACA,IAAI,CAACQ,EAAL,EAAS;IACL,KAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;MAChCD,KAAK,CAACC,CAAD,CAAL,GAAW,IAAX;IACH;EACJ,CAJD,MAKK;IACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;MAChCD,KAAK,CAACC,CAAD,CAAL,GAAW;QACPQ,iBAAiB,EAAED,EAAE,CAACC,iBADf;QAEPC,OAAO,EAAEF,EAAE,CAACE,OAFL;QAGPZ,IAAI,EAAE;MAHC,CAAX;IAKH;;IACD,KAAK,IAAII,GAAT,IAAgBM,EAAE,CAACV,IAAnB,EAAyB;MACrBE,KAAK,CAACE,GAAG,CAACC,GAAL,CAAL,CAAeL,IAAf,CAAoB7B,IAApB,CAAyBiC,GAAzB;IACH;EACJ;;EACD,OAAOF,KAAP;AACH;;AAED,MAAMW,+BAA+B,GAAGhG,eAAe,CAAC;EACpDiG,IAAI,EAAE,SAD8C;EAEpDC,MAAM,EAAE,SAF4C;EAGpDC,cAAc,EAAE,IAHoC;EAIpDC,QAAQ,EAAE;AAJ0C,CAAD,CAAvD;;AAMA,SAASC,kBAAT,CAA4Bd,GAA5B,EAAiC;EAC7B,IAAI;IAAEe;EAAF,IAAcf,GAAG,CAACgB,UAAJ,CAAeV,EAAjC;EACA,OAAOS,OAAO,KAAK,WAAZ,IAA4BA,OAAO,KAAK,MAAZ,IAC/B,CAACf,GAAG,CAACgB,UAAJ,CAAeC,GAAf,CAAmBC,MADW,IAE/BlB,GAAG,CAACI,QAAJ,KAAiBJ,GAAG,CAACmB,OAFU,IAEC;EAChCnB,GAAG,CAACoB,OAH2B,IAGhB;EACfpB,GAAG,CAACqB,KAJD,CAIO;EAJd;AAMH;;AAED,MAAMC,eAAN,SAA8B5G,aAA9B,CAA4C;EACxC6G,MAAM,GAAG;IACL,IAAI;MAAE7D;IAAF,IAAY,IAAhB;IACA,OAAQT,aAAa,CAACtC,aAAD,EAAgB6G,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB/D,KAAlB,EAAyB;MAAEe,SAAS,EAAE,CAAC,kBAAD,EAAqB,wBAArB,EAA+C,YAA/C,CAAb;MAA2EiD,iBAAiB,EAAEjB,+BAA9F;MAA+HkB,sBAAsB,EAAEjE,KAAK,CAACiE,sBAA7J;MAAqLC,eAAe,EAAE,CAAClE,KAAK,CAACsC,GAAN,CAAUgB,UAAV,CAAqBC,GAArB,CAAyBC;IAAhO,CAAzB,CAAhB,CAArB;EACH;;AAJuC;;AAO5C,MAAMW,kBAAN,SAAiCnH,aAAjC,CAA+C;EAC3C6G,MAAM,GAAG;IACL,IAAI;MAAE7D,KAAF;MAASC;IAAT,IAAqB,IAAzB;IACA,IAAI;MAAEG;IAAF,IAAcH,OAAlB;IACA,IAAI;MAAEqC;IAAF,IAAUtC,KAAd;IACA,IAAIoE,UAAU,GAAGhE,OAAO,CAACiE,eAAR,IAA2BtB,+BAA5C;IACA,IAAIuB,QAAQ,GAAGpH,gBAAgB,CAACoF,GAAD,EAAM8B,UAAN,EAAkBnE,OAAlB,EAA2B,IAA3B,EAAiCD,KAAK,CAACiE,sBAAvC,CAA/B;IACA,OAAQ1E,aAAa,CAACpC,cAAD,EAAiB2G,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB/D,KAAlB,EAAyB;MAAEuE,KAAK,EAAE,GAAT;MAAcxD,SAAS,EAAE,CAAC,kBAAD,EAAqB,sBAArB,CAAzB;MAAuEyD,OAAO,EAAEpH,iBAAiB,CAAC4C,KAAK,CAACsC,GAAP,EAAYrC,OAAZ,CAAjG;MAAuHwE,gBAAgB,EAAEC,kBAAzI;MAA6JJ,QAAQ,EAAEA,QAAvK;MAAiLK,UAAU,EAAE,KAA7L;MAAoMC,eAAe,EAAE;IAArN,CAAzB,CAAjB,CAArB;EACH;;AAR0C;;AAU/C,SAASF,kBAAT,CAA4BG,WAA5B,EAAyC;EACrC,OAAQtF,aAAa,CAACC,QAAD,EAAW,IAAX,EACjBD,aAAa,CAAC,KAAD,EAAQ;IAAEuF,SAAS,EAAE,sBAAb;IAAqCC,KAAK,EAAE;MAAEC,WAAW,EAAEH,WAAW,CAACG,WAAZ,IAA2BH,WAAW,CAACI;IAAtD;EAA5C,CAAR,CADI,EAEjBJ,WAAW,CAACP,QAAZ,IAAyB/E,aAAa,CAAC,KAAD,EAAQ;IAAEuF,SAAS,EAAE;EAAb,CAAR,EAAwCD,WAAW,CAACP,QAApD,CAFrB,EAGjB/E,aAAa,CAAC,KAAD,EAAQ;IAAEuF,SAAS,EAAE;EAAb,CAAR,EAAyCD,WAAW,CAACK,KAAZ,CAAkBC,KAAlB,IAA2B5F,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB,QAAjB,CAAjF,CAHI,CAArB;AAIH;;AAED,MAAM4F,iBAAN,SAAgCpI,aAAhC,CAA8C;EAC1C0C,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAK0F,WAAL,GAAmBhI,OAAO,CAACgI,WAAD,CAA1B;EACH;;EACDxB,MAAM,GAAG;IACL,IAAI;MAAE7D;IAAF,IAAY,IAAhB;IACA,IAAI;MAAEsF,OAAF;MAAWC;IAAX,IAA6B,KAAKF,WAAL,CAAiBrF,KAAK,CAACwF,gBAAvB,CAAjC;IACA,OAAQjG,aAAa,CAACjC,iBAAD,EAAoB;MAAEyD,SAAS,EAAE,CAAC,sBAAD,CAAb;MAAuC0E,WAAW,EAAEzF,KAAK,CAACyF,WAA1D;MAAuEC,UAAU,EAAE1F,KAAK,CAAC0F,UAAzF;MAAqGC,UAAU,EAAE3F,KAAK,CAAC2F,UAAvH;MAAmIC,OAAO,EAAE5F,KAAK,CAAC4F,OAAlJ;MAA2JN,OAAO,EAAEA,OAApK;MAA6KO,UAAU,EAAEN,aAAzL;MAAwMO,cAAc,EAAE9F,KAAK,CAAC8F,cAA9N;MAA8OC,YAAY,EAAE/F,KAAK,CAAC+F,YAAlQ;MAAgRC,aAAa,EAAEhG,KAAK,CAACgG,aAArS;MAAoTC,cAAc,EAAE,MAAM;QAC3W,IAAIC,iBAAiB,GAAG,CAAClG,KAAK,CAACmG,SAAN,GAAkBnG,KAAK,CAACmG,SAAN,CAAgBtD,iBAAlC,GAAsD,IAAvD,MACnB7C,KAAK,CAACoG,WAAN,GAAoBpG,KAAK,CAACoG,WAAN,CAAkBvD,iBAAtC,GAA0D,IADvC,KAEpB,EAFJ;QAGA,OAAQtD,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB8F,OAAO,CAACe,GAAR,CAAa/D,GAAD,IAAS;UACvD,IAAIgE,UAAU,GAAGhE,GAAG,CAACgB,UAAJ,CAAeiD,QAAf,CAAwBD,UAAzC;UACA,OAAQ/G,aAAa,CAAC,KAAD,EAAQ;YAAEuF,SAAS,EAAE,0BAAb;YAAyCvE,GAAG,EAAE+F,UAA9C;YAA0DvB,KAAK,EAAE;cACtFyB,UAAU,EAAEN,iBAAiB,CAACI,UAAD,CAAjB,GAAgC,QAAhC,GAA2C;YAD+B;UAAjE,CAAR,EAEZlD,kBAAkB,CAACd,GAAD,CAAlB,GAA2B/C,aAAa,CAAC4E,kBAAD,EAAqBL,MAAM,CAACC,MAAP,CAAc;YAAEzB,GAAG,EAAEA,GAAP;YAAYmE,UAAU,EAAE,KAAxB;YAA+BC,UAAU,EAAEJ,UAAU,KAAKtG,KAAK,CAAC2G,cAAhE;YAAgF1C,sBAAsB,EAAE;UAAxG,CAAd,EAA+H1G,UAAU,CAAC+E,GAAD,EAAMtC,KAAK,CAAC0F,UAAZ,CAAzI,CAArB,CAAxC,GAAoOnG,aAAa,CAACqE,eAAD,EAAkBE,MAAM,CAACC,MAAP,CAAc;YAAEzB,GAAG,EAAEA,GAAP;YAAYmE,UAAU,EAAE,KAAxB;YAA+B9B,UAAU,EAAE,KAA3C;YAAkDC,eAAe,EAAE,KAAnE;YAA0E8B,UAAU,EAAEJ,UAAU,KAAKtG,KAAK,CAAC2G,cAA3G;YAA2H1C,sBAAsB,EAAE;UAAnJ,CAAd,EAA0K1G,UAAU,CAAC+E,GAAD,EAAMtC,KAAK,CAAC0F,UAAZ,CAApL,CAAlB,CAFrO,CAArB;QAGH,CALqC,CAAjB,CAArB;MAMH;IAVoC,CAApB,CAArB;EAWH;;AAnByC;;AAqB9C,SAASL,WAAT,CAAqBG,gBAArB,EAAuC;EACnC,IAAIF,OAAO,GAAG,EAAd;EACA,IAAIC,aAAa,GAAG,EAApB;;EACA,KAAK,IAAIqB,SAAT,IAAsBpB,gBAAtB,EAAwC;IACpCF,OAAO,CAACjF,IAAR,CAAauG,SAAS,CAACtE,GAAvB;;IACA,IAAI,CAACsE,SAAS,CAACC,SAAf,EAA0B;MACtBtB,aAAa,CAAClF,IAAd,CAAmBuG,SAAS,CAACtE,GAA7B;IACH;EACJ;;EACD,OAAO;IAAEgD,OAAF;IAAWC;EAAX,CAAP;AACH;;AAED,MAAMuB,uBAAuB,GAAG/J,eAAe,CAAC;EAAEgK,IAAI,EAAE;AAAR,CAAD,CAA/C;;AACA,MAAMC,SAAN,SAAwBvK,aAAxB,CAAsC;EAClCiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKsH,SAAL,GAAiB3H,SAAS,EAA1B;IACA,KAAK4H,KAAL,GAAa;MACTC,WAAW,EAAE3J,cAAc;IADlB,CAAb;;IAGA,KAAK4J,YAAL,GAAqBC,EAAD,IAAQ;MACxB5J,MAAM,CAAC,KAAKwJ,SAAN,EAAiBI,EAAjB,CAAN;MACA5J,MAAM,CAAC,KAAKuC,KAAL,CAAWU,KAAZ,EAAmB2G,EAAnB,CAAN;IACH,CAHD;EAIH;;EACDxD,MAAM,GAAG;IACL,IAAI;MAAE5D,OAAF;MAAWD,KAAX;MAAkBkH,KAAlB;MAAyBD;IAAzB,IAAuC,IAA3C;IACA,IAAI;MAAE7G,OAAF;MAAWkH;IAAX,IAAuBrH,OAA3B;IACA,IAAI;MAAEsH,IAAF;MAAQ9B;IAAR,IAAwBzF,KAA5B,CAHK,CAIL;;IACA,MAAMwH,YAAY,GAAGxH,KAAK,CAACyH,aAAN,IACjBC,uBAAuB,CAACH,IAAD,EAAO9B,WAAW,CAACkC,YAAnB,EAAiCL,OAAjC,CAD3B;IAEA,OAAQ/H,aAAa,CAAC7B,gBAAD,EAAmB;MAAE6G,KAAK,EAAE,IAAT;MAAe7D,KAAK,EAAE,KAAK0G,YAA3B;MAAyCrG,SAAS,EAAE,CACpF,gBADoF,EAEpF,IAAIf,KAAK,CAAC4H,eAAN,IAAyB,EAA7B,CAFoF,CAApD;MAGjCpD,OAAO,EAAEV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB/D,KAAK,CAAC6H,cAAxB,CAAd,EAAwD7H,KAAK,CAACyH,aAAN,GAAsB;QAAE,mBAAmBP,KAAK,CAACC;MAA3B,CAAtB,GAAiE,EAAzH,CAAd,EAA6I;QAAEW,IAAI,EAAE;MAAR,CAA7I,CAHwB;MAG4IrD,gBAAgB,EAAEsD,cAH9J;MAG8KR,IAAI,EAAEA,IAHpL;MAG0L9B,WAAW,EAAEA,WAHvM;MAGoNC,UAAU,EAAE1F,KAAK,CAAC0F,UAHtO;MAGkP+B,aAAa,EAAEzH,KAAK,CAACyH,aAHvQ;MAGsRD,YAAY,EAAEA,YAHpS;MAGkTQ,gBAAgB,EAAEhI,KAAK,CAACgI;IAH1U,CAAnB,EAGiX,CAACC,YAAD,EAAepD,WAAf,KAAgCtF,aAAa,CAAC,KAAD,EAAQ;MAAE2I,GAAG,EAAElI,KAAK,CAACmI,UAAb;MAAyBrD,SAAS,EAAE,+CAApC;MAAqFC,KAAK,EAAE;QAAEqD,SAAS,EAAEpI,KAAK,CAACoI;MAAnB;IAA5F,CAAR,EAC/apI,KAAK,CAACqI,cAAN,IAAyB9I,aAAa,CAAC5B,mBAAD,EAAsB;MAAE4G,KAAK,EAAE,GAAT;MAAcxD,SAAS,EAAE,CAAC,wBAAD,CAAzB;MAAqDyD,OAAO,EAAE5G,iBAAiB,CAACqC,OAAD,EAAUsH,IAAV,EAAgB,MAAhB,CAA/E;MAAwGA,IAAI,EAAEA,IAA9G;MAAoHe,aAAa,EAAExB;IAAnI,CAAtB,CADyY,EAE/a,CAACjC,WAAW,CAAC0D,UAAb,KACKvI,KAAK,CAACyH,aAAN,IAAuB5J,uBAAuB,CAACuC,OAAD,CAA9C,IAA2DJ,KAAK,CAACwI,WADtE,IACsFjJ,aAAa,CAAC,KAAD,EAAQ;MAAEuF,SAAS,EAAE;IAAb,CAAR,EAC/FvF,aAAa,CAAC0I,YAAD,EAAe;MAAE1D,KAAK,EAAE,GAAT;MAAcxD,SAAS,EAAE,CAC7C,uBAD6C,EAE7CyG,YAAY,IAAI,wBAF6B,CAAzB;MAGrBhD,OAAO,EAAEV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBnG,iBAAiB,CAACqC,OAAD,EAAUsH,IAAV,CAAnC,CAAd,EAAmE;QAAEkB,EAAE,EAAEvB,KAAK,CAACC;MAAZ,CAAnE;IAHY,CAAf,CADkF,CADnG,GAKyHnH,KAAK,CAACyH,aAAN,GACzH;IACAlI,aAAa,CAAC,KAAD,EAAQ;MAAEuF,SAAS,EAAE,oBAAb;MAAmCC,KAAK,EAAE;QAAEyB,UAAU,EAAE;MAAd;IAA1C,CAAR,EACTjH,aAAa,CAAC,GAAD,EAAM;MAAEuF,SAAS,EAAE;IAAb,CAAN,EAA8C,QAA9C,CADJ,CAF4G,GAG5C4D,SAVkW,EAW/anJ,aAAa,CAAC,KAAD,EAAQ;MAAEuF,SAAS,EAAE,uBAAb;MAAsCoD,GAAG,EAAElI,KAAK,CAAC2I;IAAjD,CAAR,EACT3I,KAAK,CAAC4I,SADG,EAETrJ,aAAa,CAAC,KAAD,EAAQ;MAAEuF,SAAS,EAAE,uBAAb;MAAsCC,KAAK,EAAE;QAAE8D,SAAS,EAAE7I,KAAK,CAAC8I;MAAnB;IAA7C,CAAR,EACTvJ,aAAa,CAAC6F,iBAAD,EAAoB;MAAEO,UAAU,EAAE4B,IAAd;MAAoB/B,gBAAgB,EAAExF,KAAK,CAACwF,gBAA5C;MAA8DI,OAAO,EAAE5F,KAAK,CAAC4F,OAA7E;MAAsFE,cAAc,EAAEmB,SAAtG;MAAiHlB,YAAY,EAAE,CAAC/F,KAAK,CAACyH,aAAtI;MAAqJzB,aAAa,EAAEhG,KAAK,CAACgG,aAA1K;MAAyLP,WAAW,EAAEzF,KAAK,CAACyF,WAA5M;MAAyNkB,cAAc,EAAE3G,KAAK,CAAC2G,cAA/O;MAA+PR,SAAS,EAAEnG,KAAK,CAACmG,SAAhR;MAA2RC,WAAW,EAAEpG,KAAK,CAACoG,WAA9S;MAA2TV,UAAU,EAAE1F,KAAK,CAAC0F;IAA7U,CAApB,CADJ,CAFJ,CAXka,EAe/anG,aAAa,CAAC,KAAD,EAAQ;MAAEuF,SAAS,EAAE;IAAb,CAAR,EAA4C9E,KAAK,CAAC+I,SAAlD,CAfka,CAH9Z,CAArB;EAmBH;;AAtCiC;;AAwCtC,SAAShB,cAAT,CAAwB/H,KAAxB,EAA+B;EAC3B,OAAOA,KAAK,CAACgJ,aAAN,IAAuBzJ,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB,QAAjB,CAA3C;AACH;;AACD,SAASkI,uBAAT,CAAiCH,IAAjC,EAAuCI,YAAvC,EAAqDL,OAArD,EAA8D;EAC1D,MAAM;IAAE2B,KAAK,EAAEC,YAAT;IAAuBC,GAAG,EAAEC;EAA5B,IAA2CzB,YAAjD;EACA,MAAM0B,cAAc,GAAGvL,KAAK,CAACsL,UAAD,EAAa,CAAC,CAAd,CAA5B;EACA,MAAME,gBAAgB,GAAGhC,OAAO,CAACiC,OAAR,CAAgBL,YAAhB,CAAzB;EACA,MAAMM,iBAAiB,GAAGlC,OAAO,CAACmC,QAAR,CAAiBP,YAAjB,CAA1B;EACA,MAAMQ,eAAe,GAAGpC,OAAO,CAACiC,OAAR,CAAgBF,cAAhB,CAAxB;EACA,MAAMM,gBAAgB,GAAGrC,OAAO,CAACmC,QAAR,CAAiBJ,cAAjB,CAAzB,CAN0D,CAO1D;;EACA,OAAO,EAAEC,gBAAgB,KAAKI,eAArB,IAAwCF,iBAAiB,KAAKG,gBAAhE,KACHC,OAAO,EACP;EACArC,IAAI,CAACsC,OAAL,OAAmBX,YAAY,CAACW,OAAb,EAAnB,IACI;EACCvC,OAAO,CAACwC,MAAR,CAAevC,IAAf,MAAyB,CAAzB,IAA8BA,IAAI,CAACsC,OAAL,KAAiBT,UAAU,CAACS,OAAX,EAJ7C,CADX;AAMH;;AAED,SAASE,cAAT,CAAwBzH,GAAxB,EAA6B;EACzB,OAAOA,GAAG,CAACgB,UAAJ,CAAeiD,QAAf,CAAwBD,UAAxB,GAAqC,GAArC,GAA2ChE,GAAG,CAACI,QAAtD;AACH;;AACD,SAASsH,cAAT,CAAwB1H,GAAxB,EAA6B;EACzB,OAAOyH,cAAc,CAACzH,GAAD,CAAd,GAAsB,GAAtB,GAA4BA,GAAG,CAACmB,OAAvC;AACH;;AACD,SAASwG,qBAAT,CAA+B/H,IAA/B,EAAqC;AACrCgI,YADA,EACcC,eADd,EAC+BC,WAD/B,EAC4CC,UAD5C,EACwDC,gBADxD,EAC0EC,KAD1E,EACiF;EAC7E,IAAIC,SAAS,GAAG,IAAIC,mBAAJ,CAAyBC,QAAD,IAAc;IAClD;IACA,IAAIC,MAAM,GAAGzI,IAAI,CAACwI,QAAQ,CAACE,KAAV,CAAJ,CAAqBtH,UAArB,CAAgCiD,QAAhC,CAAyCD,UAAzC,GACT,GADS,GACHoE,QAAQ,CAAC3I,IAAT,CAAckH,KADX,GAET,GAFS,IAEFyB,QAAQ,CAAC3I,IAAT,CAAcoH,GAAd,GAAoB,CAFlB,CAAb,CAFkD,CAKlD;;IACA,OAAOkB,UAAU,CAACM,MAAD,CAAV,IAAsB,CAA7B;EACH,CAPe,CAAhB;EAQAH,SAAS,CAACK,cAAV,GAA2B,IAA3B;EACAL,SAAS,CAACJ,WAAV,GAAwBA,WAAxB;;EACA,IAAIF,YAAY,KAAK,IAAjB,IAAyBC,eAAe,KAAK,IAAjD,EAAuD;IACnDK,SAAS,CAACM,QAAV,GAAqBR,gBAArB;IACAE,SAAS,CAACO,cAAV,GAA2B,IAA3B;EACH,CAHD,MAIK,IAAI,OAAOb,YAAP,KAAwB,QAA5B,EAAsC;IACvCM,SAAS,CAACQ,WAAV,GAAwBd,YAAxB;EACH,CAFI,MAGA,IAAI,OAAOC,eAAP,KAA2B,QAA/B,EAAyC;IAC1CK,SAAS,CAACQ,WAAV,GAAwBb,eAAxB;IACAK,SAAS,CAACO,cAAV,GAA2B,IAA3B;EACH,CArB4E,CAsB7E;;;EACA,IAAIE,SAAS,GAAG,EAAhB;EACA,IAAIC,iBAAiB,GAAG,EAAxB;;EACA,KAAK,IAAI7I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACiJ,MAAzB,EAAiC9I,CAAC,IAAI,CAAtC,EAAyC;IACrC,IAAIC,GAAG,GAAGJ,IAAI,CAACG,CAAD,CAAd;IACA,IAAIsI,MAAM,GAAGX,cAAc,CAAC1H,GAAD,CAA3B;IACA,IAAI8I,WAAW,GAAGf,UAAU,CAACM,MAAD,CAA5B;;IACA,IAAIS,WAAW,IAAI,IAAnB,EAAyB;MACrBH,SAAS,CAAC5K,IAAV,CAAe;QACXuK,KAAK,EAAEvI,CADI;QAEXN,IAAI,EAAE;UACFkH,KAAK,EAAE3G,GAAG,CAACI,QADT;UAEFyG,GAAG,EAAE7G,GAAG,CAACmB,OAAJ,GAAc;QAFjB;MAFK,CAAf;IAOH,CARD,MASK;MACDyH,iBAAiB,CAAC7K,IAAlB,CAAuBiC,GAAvB;IACH;EACJ;;EACD,IAAI+I,aAAa,GAAGb,SAAS,CAACc,OAAV,CAAkBL,SAAlB,CAApB;EACA,IAAIM,QAAQ,GAAGf,SAAS,CAACgB,OAAV,EAAf;EACA,IAAI;IAAEC,mBAAF;IAAuBC,kBAAvB;IAA2CC;EAA3C,IAA+DC,UAAU,CAACL,QAAD,EAAWrJ,IAAX,EAAiBqI,KAAjB,CAA7E;EACA,IAAIsB,QAAQ,GAAG,EAAf;EACA,IAAIC,cAAc,GAAG,EAArB,CA9C6E,CA+C7E;;EACA,KAAK,IAAIxJ,GAAT,IAAgB4I,iBAAhB,EAAmC;IAC/BQ,kBAAkB,CAACpJ,GAAG,CAACI,QAAL,CAAlB,CAAiCrC,IAAjC,CAAsC;MAClCiC,GADkC;MAElCuE,SAAS,EAAE,KAFuB;MAGlCkF,UAAU,EAAE,IAHsB;MAIlCC,WAAW,EAAE,CAJqB;MAKlCnD,SAAS,EAAE;IALuB,CAAtC;;IAOA,KAAK,IAAIoD,GAAG,GAAG3J,GAAG,CAACI,QAAnB,EAA6BuJ,GAAG,IAAI3J,GAAG,CAACmB,OAAxC,EAAiDwI,GAAG,IAAI,CAAxD,EAA2D;MACvDR,mBAAmB,CAACQ,GAAD,CAAnB,CAAyB5L,IAAzB,CAA8B;QAC1BiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAM2J,GAAN,EAAWA,GAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADW;QAE1B1D,SAAS,EAAE,KAFe;QAG1BkF,UAAU,EAAE,KAHc;QAI1BC,WAAW,EAAE,CAJa;QAK1BnD,SAAS,EAAE;MALe,CAA9B;IAOH;EACJ,CAjE4E,CAkE7E;;;EACA,KAAK,IAAIoD,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,GAAG,IAAI,CAA7C,EAAgD;IAC5CJ,QAAQ,CAACxL,IAAT,CAAc,CAAd;EACH;;EACD,KAAK,IAAI8L,WAAT,IAAwBd,aAAxB,EAAuC;IACnC,IAAI/I,GAAG,GAAGJ,IAAI,CAACiK,WAAW,CAACvB,KAAb,CAAd;IACA,IAAIwB,UAAU,GAAGD,WAAW,CAACpK,IAA7B;IACA2J,kBAAkB,CAACU,UAAU,CAACnD,KAAZ,CAAlB,CAAqC5I,IAArC,CAA0C;MACtCiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAM8J,UAAU,CAACnD,KAAjB,EAAwBmD,UAAU,CAACjD,GAAnC,EAAwCoB,KAAxC,CADuB;MAEtC1D,SAAS,EAAE,KAF2B;MAGtCkF,UAAU,EAAE,IAH0B;MAItCC,WAAW,EAAE,CAJyB;MAKtCnD,SAAS,EAAE;IAL2B,CAA1C;;IAOA,KAAK,IAAIoD,GAAG,GAAGG,UAAU,CAACnD,KAA1B,EAAiCgD,GAAG,GAAGG,UAAU,CAACjD,GAAlD,EAAuD8C,GAAG,IAAI,CAA9D,EAAiE;MAC7DJ,QAAQ,CAACI,GAAD,CAAR,IAAiB,CAAjB;MACAR,mBAAmB,CAACQ,GAAD,CAAnB,CAAyB5L,IAAzB,CAA8B;QAC1BiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAM2J,GAAN,EAAWA,GAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADW;QAE1B1D,SAAS,EAAE,KAFe;QAG1BkF,UAAU,EAAE,KAHc;QAI1BC,WAAW,EAAE,CAJa;QAK1BnD,SAAS,EAAE;MALe,CAA9B;IAOH;EACJ,CA1F4E,CA2F7E;;;EACA,KAAK,IAAIoD,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,GAAG,IAAI,CAA7C,EAAgD;IAC5CH,cAAc,CAACzL,IAAf,CAAoBsL,eAAe,CAACM,GAAD,CAAnC;EACH;;EACD,OAAO;IAAER,mBAAF;IAAuBC,kBAAvB;IAA2CG,QAA3C;IAAqDC;EAArD,CAAP;AACH,C,CACD;;;AACA,SAASF,UAAT,CAAoBS,QAApB,EAA8BnK,IAA9B,EAAoCqI,KAApC,EAA2C;EACvC,IAAI+B,cAAc,GAAGC,mBAAmB,CAACF,QAAD,EAAW9B,KAAK,CAACY,MAAjB,CAAxC;EACA,IAAIM,mBAAmB,GAAG,EAA1B;EACA,IAAIC,kBAAkB,GAAG,EAAzB;EACA,IAAIC,eAAe,GAAG,EAAtB;;EACA,KAAK,IAAIM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,GAAG,IAAI,CAA7C,EAAgD;IAC5C,IAAIO,KAAK,GAAGF,cAAc,CAACL,GAAD,CAA1B,CAD4C,CAE5C;;IACA,IAAIzG,gBAAgB,GAAG,EAAvB;IACA,IAAIiH,aAAa,GAAG,CAApB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;;IACA,KAAK,IAAIC,IAAT,IAAiBH,KAAjB,EAAwB;MACpB,IAAIlK,GAAG,GAAGJ,IAAI,CAACyK,IAAI,CAAC/B,KAAN,CAAd;MACApF,gBAAgB,CAACnF,IAAjB,CAAsB;QAClBiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAM2J,GAAN,EAAWA,GAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADG;QAElB1D,SAAS,EAAE,IAFO;QAGlBkF,UAAU,EAAE,KAHM;QAIlBC,WAAW,EAAEW,IAAI,CAACC,UAJA;QAKlB/D,SAAS,EAAE8D,IAAI,CAACC,UAAL,GAAkBH;MALX,CAAtB;MAOAA,aAAa,GAAGE,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,SAAvC;IACH,CAhB2C,CAiB5C;;;IACA,IAAIC,eAAe,GAAG,EAAtB;IACAL,aAAa,GAAG,CAAhB;IACAC,gBAAgB,GAAG,CAAnB;;IACA,KAAK,IAAIC,IAAT,IAAiBH,KAAjB,EAAwB;MACpB,IAAIlK,GAAG,GAAGJ,IAAI,CAACyK,IAAI,CAAC/B,KAAN,CAAd;MACA,IAAImB,UAAU,GAAGY,IAAI,CAAC5K,IAAL,CAAUoH,GAAV,GAAgBwD,IAAI,CAAC5K,IAAL,CAAUkH,KAA1B,GAAkC,CAAnD,CAFoB,CAEkC;;MACtD,IAAI8D,UAAU,GAAGJ,IAAI,CAAC5K,IAAL,CAAUkH,KAAV,KAAoBgD,GAArC;MACAS,gBAAgB,IAAIC,IAAI,CAACC,UAAL,GAAkBH,aAAtC,CAJoB,CAIiC;;MACrDA,aAAa,GAAGE,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,SAAvC,CALoB,CAK8B;;MAClD,IAAId,UAAJ,EAAgB;QACZW,gBAAgB,IAAIC,IAAI,CAACE,SAAzB;;QACA,IAAIE,UAAJ,EAAgB;UACZD,eAAe,CAACzM,IAAhB,CAAqB;YACjBiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAMqK,IAAI,CAAC5K,IAAL,CAAUkH,KAAhB,EAAuB0D,IAAI,CAAC5K,IAAL,CAAUoH,GAAjC,EAAsCoB,KAAtC,CADE;YAEjB1D,SAAS,EAAE,IAFM;YAGjBkF,UAAU,EAAE,IAHK;YAIjBC,WAAW,EAAEW,IAAI,CAACC,UAJD;YAKjB/D,SAAS,EAAE;UALM,CAArB;QAOH;MACJ,CAXD,MAYK,IAAIkE,UAAJ,EAAgB;QACjBD,eAAe,CAACzM,IAAhB,CAAqB;UACjBiC,GAAG,EAAE4J,UAAU,CAAC5J,GAAD,EAAMqK,IAAI,CAAC5K,IAAL,CAAUkH,KAAhB,EAAuB0D,IAAI,CAAC5K,IAAL,CAAUoH,GAAjC,EAAsCoB,KAAtC,CADE;UAEjB1D,SAAS,EAAE,IAFM;UAGjBkF,UAAU,EAAE,KAHK;UAIjBC,WAAW,EAAEW,IAAI,CAACC,UAJD;UAKjB/D,SAAS,EAAE6D,gBALM,CAKY;;QALZ,CAArB;QAOAA,gBAAgB,GAAG,CAAnB;MACH;IACJ;;IACDjB,mBAAmB,CAACpL,IAApB,CAAyBmF,gBAAzB;IACAkG,kBAAkB,CAACrL,IAAnB,CAAwByM,eAAxB;IACAnB,eAAe,CAACtL,IAAhB,CAAqBqM,gBAArB;EACH;;EACD,OAAO;IAAEjB,mBAAF;IAAuBC,kBAAvB;IAA2CC;EAA3C,CAAP;AACH;;AACD,SAASY,mBAAT,CAA6BC,KAA7B,EAAoClL,MAApC,EAA4C;EACxC,IAAIgL,cAAc,GAAG,EAArB;;EACA,KAAK,IAAIL,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG3K,MAAxB,EAAgC2K,GAAG,IAAI,CAAvC,EAA0C;IACtCK,cAAc,CAACjM,IAAf,CAAoB,EAApB;EACH;;EACD,KAAK,IAAIsM,IAAT,IAAiBH,KAAjB,EAAwB;IACpB,KAAK,IAAIP,GAAG,GAAGU,IAAI,CAAC5K,IAAL,CAAUkH,KAAzB,EAAgCgD,GAAG,GAAGU,IAAI,CAAC5K,IAAL,CAAUoH,GAAhD,EAAqD8C,GAAG,IAAI,CAA5D,EAA+D;MAC3DK,cAAc,CAACL,GAAD,CAAd,CAAoB5L,IAApB,CAAyBsM,IAAzB;IACH;EACJ;;EACD,OAAOL,cAAP;AACH;;AACD,SAASJ,UAAT,CAAoB5J,GAApB,EAAyB0K,SAAzB,EAAoCC,OAApC,EAA6C1C,KAA7C,EAAoD;EAChD,IAAIjI,GAAG,CAACI,QAAJ,KAAiBsK,SAAjB,IAA8B1K,GAAG,CAACmB,OAAJ,KAAgBwJ,OAAO,GAAG,CAA5D,EAA+D;IAC3D,OAAO3K,GAAP;EACH;;EACD,IAAIgB,UAAU,GAAGhB,GAAG,CAACgB,UAArB;EACA,IAAI4J,SAAS,GAAG5J,UAAU,CAAC6J,KAA3B;EACA,IAAIC,WAAW,GAAGrP,eAAe,CAACmP,SAAD,EAAY;IACzCjE,KAAK,EAAEsB,KAAK,CAACyC,SAAD,CAAL,CAAiBzF,IADiB;IAEzC4B,GAAG,EAAEnL,OAAO,CAACuM,KAAK,CAAC0C,OAAO,GAAG,CAAX,CAAL,CAAmB1F,IAApB,EAA0B,CAA1B;EAF6B,CAAZ,CAAjC;EAIA,OAAOzD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,GAAlB,CAAd,EAAsC;IAAEI,QAAQ,EAAEsK,SAAZ;IAAuBvJ,OAAO,EAAEwJ,OAAO,GAAG,CAA1C;IAA6C3J,UAAU,EAAE;MAC9FC,GAAG,EAAED,UAAU,CAACC,GAD8E;MAE9FX,EAAE,EAAEkB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,UAAU,CAACV,EAA7B,CAAd,EAAgD;QAAEyK,gBAAgB,EAAE;MAApB,CAAhD,CAF0F;MAG9F9G,QAAQ,EAAEjD,UAAU,CAACiD,QAHyE;MAI9F4G,KAAK,EAAEC;IAJuF,CAAzD;IAKtC1J,OAAO,EAAEpB,GAAG,CAACoB,OAAJ,IAAe0J,WAAW,CAACnE,KAAZ,CAAkBY,OAAlB,OAAgCqD,SAAS,CAACjE,KAAV,CAAgBY,OAAhB,EALlB;IAK6ClG,KAAK,EAAErB,GAAG,CAACqB,KAAJ,IAAayJ,WAAW,CAACjE,GAAZ,CAAgBU,OAAhB,OAA8BqD,SAAS,CAAC/D,GAAV,CAAcU,OAAd;EAL/F,CAAtC,CAAP;AAMH;;AACD,MAAMY,mBAAN,SAAkCxM,YAAlC,CAA+C;EAC3CyB,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT,EADU,CAEV;;IACA,KAAKoL,cAAL,GAAsB,KAAtB,CAHU,CAIV;;IACA,KAAKuC,WAAL,GAAmB,EAAnB;EACH;;EACDhC,OAAO,CAACL,SAAD,EAAY;IACf,MAAMpF,UAAU,GAAG,MAAMyF,OAAN,CAAcL,SAAd,CAAnB;IACA,MAAM;MAAEsC;IAAF,IAAqB,IAA3B;;IACA,MAAMC,aAAa,GAAIC,KAAD,IAAW,CAAC,KAAKH,WAAL,CAAiBpP,aAAa,CAACuP,KAAD,CAA9B,CAAlC,CAHe,CAIf;;;IACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,cAAc,CAACpC,MAA3C,EAAmDuC,KAAK,IAAI,CAA5D,EAA+D;MAC3DH,cAAc,CAACG,KAAD,CAAd,GAAwBH,cAAc,CAACG,KAAD,CAAd,CAAsBC,MAAtB,CAA6BH,aAA7B,CAAxB;IACH;;IACD,OAAO3H,UAAP;EACH;;EACD+H,sBAAsB,CAACC,SAAD,EAAYJ,KAAZ,EAAmBpC,aAAnB,EAAkC;IACpD,MAAM;MAAEkC,cAAF;MAAkBD;IAAlB,IAAkC,IAAxC;IACA,MAAM;MAAEQ,aAAF;MAAiBC,aAAjB;MAAgCC;IAAhC,IAAoDH,SAA1D,CAFoD,CAGpD;;IACA,IAAI,KAAK9C,cAAL,IAAuB+C,aAA3B,EAA0C;MACtC,MAAMG,eAAe,GAAG/P,aAAa,CAAC4P,aAAD,CAArC;;MACA,IAAI,CAACR,WAAW,CAACW,eAAD,CAAhB,EAAmC;QAC/B,IAAI,KAAKpD,cAAT,EAAyB;UACrB;UACA,MAAMsB,WAAW,GAAGrI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB+J,aAAlB,CAAd,EAAgD;YAAE/L,IAAI,EAAE5D,cAAc,CAAC2P,aAAa,CAAC/L,IAAf,EAAqB0L,KAAK,CAAC1L,IAA3B;UAAtB,CAAhD,CAApB,CAFqB,CAGrB;UACA;;UACA,MAAMmM,aAAa,GAAGhQ,aAAa,CAACiO,WAAD,CAAnC;UACAmB,WAAW,CAACY,aAAD,CAAX,GAA6B,IAA7B;UACAX,cAAc,CAACQ,aAAD,CAAd,CAA8BC,eAA9B,IAAiD7B,WAAjD;UACAd,aAAa,CAAChL,IAAd,CAAmB8L,WAAnB;UACA,KAAKgC,UAAL,CAAgBL,aAAhB,EAA+BL,KAA/B,EAAsCpC,aAAtC;QACH,CAVD,MAWK;UACDiC,WAAW,CAACW,eAAD,CAAX,GAA+B,IAA/B;UACA5C,aAAa,CAAChL,IAAd,CAAmByN,aAAnB;QACH;MACJ;IACJ,CAvBmD,CAwBpD;;;IACA,MAAMF,sBAAN,CAA6BC,SAA7B,EAAwCJ,KAAxC,EAA+CpC,aAA/C;EACH;;AA5C0C;;AA+C/C,MAAM+C,QAAN,SAAuB3R,aAAvB,CAAqC;EACjCiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAK0O,UAAL,GAAkB,IAAIjQ,MAAJ,EAAlB,CAFU,CAEsB;;IAChC,KAAKkQ,WAAL,GAAmB,IAAIlQ,MAAJ,EAAnB,CAHU,CAGuB;;IACjC,KAAKmQ,QAAL,GAAgB,IAAInQ,MAAJ,EAAhB,CAJU,CAIoB;;IAC9B,KAAKoQ,cAAL,GAAsB,IAAIpQ,MAAJ,EAAtB,CALU,CAK0B;;IACpC,KAAK6I,SAAL,GAAiB3H,SAAS,EAA1B;IACA,KAAK4H,KAAL,GAAa;MACTuH,cAAc,EAAE,IADP;MAETnE,gBAAgB,EAAE,IAFT;MAGTD,UAAU,EAAE;IAHH,CAAb;;IAKA,KAAKqE,YAAL,GAAqBC,QAAD,IAAc;MAC9B,IAAIA,QAAJ,EAAc;QACV,KAAKC,YAAL,CAAkB,IAAlB,EADU,CACe;MAC5B;IACJ,CAJD;EAKH;;EACD/K,MAAM,GAAG;IACL,IAAI;MAAE7D,KAAF;MAASkH,KAAT;MAAgBjH;IAAhB,IAA4B,IAAhC;IACA,IAAI;MAAEG;IAAF,IAAcH,OAAlB;IACA,IAAIqB,MAAM,GAAGtB,KAAK,CAACuK,KAAN,CAAYY,MAAzB;IACA,IAAI0D,kBAAkB,GAAGrM,mBAAmB,CAACxC,KAAK,CAAC8O,gBAAP,EAAyBxN,MAAzB,CAA5C;IACA,IAAIyN,gBAAgB,GAAGvM,mBAAmB,CAACxC,KAAK,CAACgP,WAAP,EAAoB1N,MAApB,CAA1C;IACA,IAAI2N,kBAAkB,GAAGzM,mBAAmB,CAAC,KAAK0M,gBAAL,EAAD,EAA0B5N,MAA1B,CAA5C;IACA,IAAI6N,eAAe,GAAG3M,mBAAmB,CAAC,KAAK4M,aAAL,EAAD,EAAuB9N,MAAvB,CAAzC;IACA,IAAI;MAAEmK,mBAAF;MAAuBC,kBAAvB;MAA2CG,QAA3C;MAAqDC;IAArD,IAAwE7B,qBAAqB,CAAC5L,aAAa,CAAC2B,KAAK,CAACqP,WAAP,EAAoBjP,OAAO,CAACkP,UAA5B,CAAd,EAAuDtP,KAAK,CAACkK,YAA7D,EAA2ElK,KAAK,CAACmK,eAAjF,EAAkG/J,OAAO,CAACmP,gBAA1G,EAA4HrI,KAAK,CAACmD,UAAlI,EAA8InD,KAAK,CAACoD,gBAApJ,EAAsKtK,KAAK,CAACuK,KAA5K,CAAjG;IACA,IAAIrE,iBAAiB,GAAG;IACtBlG,KAAK,CAACmG,SAAN,IAAmBnG,KAAK,CAACmG,SAAN,CAAgBtD,iBAApC,IACI7C,KAAK,CAACoG,WAAN,IAAqBpG,KAAK,CAACoG,WAAN,CAAkBvD,iBAD3C,IAEG,EAHJ;IAIA,OAAQtD,aAAa,CAAC,IAAD,EAAO;MAAE2I,GAAG,EAAE,KAAKjB,SAAZ;MAAuBa,IAAI,EAAE;IAA7B,CAAP,EACjB9H,KAAK,CAACwP,WAAN,IAAqBxP,KAAK,CAACwP,WAAN,EADJ,EAEjBxP,KAAK,CAACuK,KAAN,CAAYlE,GAAZ,CAAgB,CAACoJ,IAAD,EAAOxD,GAAP,KAAe;MAC3B,IAAIyD,aAAa,GAAG,KAAKC,YAAL,CAAkB1D,GAAlB,EAAuBjM,KAAK,CAACkB,QAAN,GAAiBuK,mBAAmB,CAACQ,GAAD,CAApC,GAA4CP,kBAAkB,CAACO,GAAD,CAArF,EAA4FjM,KAAK,CAAC0F,UAAlG,EAA8GQ,iBAA9G,CAApB;MACA,IAAI0J,aAAa,GAAG,KAAKD,YAAL,CAAkB1D,GAAlB,EAAuB4D,qBAAqB,CAACV,eAAe,CAAClD,GAAD,CAAhB,EAAuBP,kBAAvB,CAA5C,EAAwF1L,KAAK,CAAC0F,UAA9F,EAA0G,EAA1G,EAA8GkE,OAAO,CAAC5J,KAAK,CAACmG,SAAP,CAArH,EAAwIyD,OAAO,CAAC5J,KAAK,CAACoG,WAAP,CAA/I,EAAoK,KAApK,CAApB;MACA,OAAQ7G,aAAa,CAACyH,SAAD,EAAY;QAAEzG,GAAG,EAAEkP,IAAI,CAAClP,GAAZ;QAAiBG,KAAK,EAAE,KAAK2N,UAAL,CAAgB/O,SAAhB,CAA0BmQ,IAAI,CAAClP,GAA/B,CAAxB;QAA6D4H,UAAU,EAAE,KAAKmG,WAAL,CAAiBhP,SAAjB,CAA2BmQ,IAAI,CAAClP,GAAhC;QAAqC;QAA9G;QAAwLkF,WAAW,EAAEzF,KAAK,CAACyF,WAA3M;QAAwN8B,IAAI,EAAEkI,IAAI,CAAClI,IAAnO;QAAyOE,aAAa,EAAEzH,KAAK,CAAC8P,cAA9P;QAA8QzH,cAAc,EAAErI,KAAK,CAAC+P,eAAN,IAAyB9D,GAAG,KAAK,CAA/T;QAAkUzD,WAAW,EAAExI,KAAK,CAAC+P;QAAgB;QAArW;QAAiarK,UAAU,EAAE1F,KAAK,CAAC0F,UAAnb;QAA+biB,cAAc,EAAE3G,KAAK,CAAC2G,cAArd;QAAqeR,SAAS,EAAEnG,KAAK,CAACmG,SAAtf;QAAigBC,WAAW,EAAEpG,KAAK,CAACoG,WAAphB;QAAiiB4B,gBAAgB,EAAEyH,IAAI,CAACzH,gBAAxjB;QAA0kBH,cAAc,EAAE4H,IAAI,CAAC5H,cAA/lB;QAA+mBD,eAAe,EAAE6H,IAAI,CAAC7H,eAAroB;QAAspB5B,aAAa,EAAEyJ,IAAI,CAACzJ,aAA1qB;QAAyrBJ,OAAO,EAAEiG,QAAQ,CAACI,GAAD,CAA1sB;QAAitBnD,aAAa,EAAEgD,cAAc,CAACG,GAAD,CAA9uB;QAAqvBzG,gBAAgB,EAAEiG,mBAAmB,CAACQ,GAAD,CAA1xB;QAAiyBtD,cAAc,EAAE,KAAK4F,QAAL,CAAcjP,SAAd,CAAwBmQ,IAAI,CAAClP,GAA7B,CAAjzB;QAAo1BqI,SAAS,EAAI;QAC93BrJ,aAAa,CAACC,QAAD,EAAW,IAAX,EACTD,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiBkQ,aAAjB,CADJ,EAETnQ,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiBoQ,aAAjB,CAFJ,CADgB;QAGuB7G,SAAS,EAAI;QACjExJ,aAAa,CAACC,QAAD,EAAW,IAAX,EACT,KAAKwQ,cAAL,CAAoBf,kBAAkB,CAAChD,GAAD,CAAtC,EAA6C,WAA7C,CADS,EAET,KAAK+D,cAAL,CAAoBnB,kBAAkB,CAAC5C,GAAD,CAAtC,EAA6C,cAA7C,CAFS,EAGT,KAAK+D,cAAL,CAAoBjB,gBAAgB,CAAC9C,GAAD,CAApC,EAA2C,UAA3C,CAHS,CAJgB;QAOiC7D,SAAS,EAAEpI,KAAK,CAACiQ;MAPlD,CAAZ,CAArB;IAQH,CAXD,CAFiB,CAArB;EAcH;;EACDC,iBAAiB,GAAG;IAChB,KAAKtB,YAAL,CAAkB,IAAlB;IACA,KAAK3O,OAAL,CAAakQ,gBAAb,CAA8B,KAAKzB,YAAnC;EACH;;EACD0B,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;IACrC,IAAIC,YAAY,GAAG,KAAKvQ,KAAxB;IACA,KAAK4O,YAAL,CAAkB,CAACtQ,YAAY,CAAC+R,SAAD,EAAYE,YAAZ,CAA/B;EACH;;EACDC,oBAAoB,GAAG;IACnB,KAAKvQ,OAAL,CAAawQ,mBAAb,CAAiC,KAAK/B,YAAtC;EACH;;EACDQ,gBAAgB,GAAG;IACf,IAAI;MAAElP;IAAF,IAAY,IAAhB;;IACA,IAAIA,KAAK,CAACmG,SAAN,IAAmBnG,KAAK,CAACmG,SAAN,CAAgBjE,IAAhB,CAAqBiJ,MAA5C,EAAoD;MAAE;MAClD,OAAOnL,KAAK,CAACmG,SAAN,CAAgBjE,IAAvB;IACH;;IACD,IAAIlC,KAAK,CAACoG,WAAN,IAAqBpG,KAAK,CAACoG,WAAN,CAAkBlE,IAAlB,CAAuBiJ,MAAhD,EAAwD;MAAE;MACtD,OAAOnL,KAAK,CAACoG,WAAN,CAAkBlE,IAAzB;IACH;;IACD,OAAOlC,KAAK,CAAC0Q,iBAAb;EACH;;EACDtB,aAAa,GAAG;IACZ,IAAI;MAAEpP;IAAF,IAAY,IAAhB;;IACA,IAAIA,KAAK,CAACoG,WAAN,IAAqBpG,KAAK,CAACoG,WAAN,CAAkBlE,IAAlB,CAAuBiJ,MAAhD,EAAwD;MAAE;MACtD,OAAOnL,KAAK,CAACoG,WAAN,CAAkBlE,IAAzB;IACH;;IACD,OAAO,EAAP;EACH;;EACDyN,YAAY,CAAC1D,GAAD,EAAM0E,aAAN,EAAqBjL,UAArB,EAAiCQ,iBAAjC,EAAoDO,UAApD,EAAgE9B,UAAhE,EAA4EC,eAA5E,EAA6F;IACrG,IAAI;MAAE3E;IAAF,IAAc,IAAlB;IACA,IAAI;MAAE0G;IAAF,IAAqB,KAAK3G,KAA9B;IACA,IAAI;MAAEyO;IAAF,IAAqB,KAAKvH,KAA9B;IACA,IAAIjD,sBAAsB,GAAG,KAAKjE,KAAL,CAAWuK,KAAX,CAAiBY,MAAjB,KAA4B,CAAzD,CAJqG,CAIzC;;IAC5D,IAAIyF,QAAQ,GAAGnK,UAAU,IAAI9B,UAAd,IAA4BC,eAA3C;IACA,IAAIiM,KAAK,GAAG,EAAZ;;IACA,IAAIpC,cAAJ,EAAoB;MAChB,KAAK,IAAI7H,SAAT,IAAsB+J,aAAtB,EAAqC;QACjC,IAAI;UAAErO;QAAF,IAAUsE,SAAd;QACA,IAAI;UAAEN;QAAF,IAAiBhE,GAAG,CAACgB,UAAJ,CAAeiD,QAApC;QACA,IAAIM,SAAS,GAAGD,SAAS,CAACC,SAAV,IAAuB,CAACX,iBAAiB,CAACI,UAAD,CAAzD;QACA,IAAIyF,UAAU,GAAGnF,SAAS,CAACmF,UAA3B;QACA,IAAI+E,IAAI,GAAG,EAAX;QACA,IAAIC,KAAK,GAAG,EAAZ;;QACA,IAAIhF,UAAJ,EAAgB;UACZ,IAAI9L,OAAO,CAAC+Q,KAAZ,EAAmB;YACfD,KAAK,GAAG,CAAR;YACAD,IAAI,GAAGrC,cAAc,CAACwC,KAAf,CAAqB3O,GAAG,CAACmB,OAAzB,IAAoCgL,cAAc,CAACwC,KAAf,CAAqB3O,GAAG,CAACI,QAAzB,CAA3C;UACH,CAHD,MAIK;YACDoO,IAAI,GAAG,CAAP;YACAC,KAAK,GAAGtC,cAAc,CAACyC,MAAf,CAAsB5O,GAAG,CAACI,QAA1B,IAAsC+L,cAAc,CAACyC,MAAf,CAAsB5O,GAAG,CAACmB,OAA1B,CAA9C;UACH;QACJ;QACD;AAChB;AACA;AACA;;;QACgBoN,KAAK,CAACxQ,IAAN,CAAWd,aAAa,CAAC,KAAD,EAAQ;UAAEuF,SAAS,EAAE,8BAA8BiH,UAAU,GAAG,+BAAH,GAAqC,EAA7E,CAAb;UAA+FxL,GAAG,EAAEwJ,cAAc,CAACzH,GAAD,CAAlH;UAAyH4F,GAAG,EAAE0I,QAAQ,GAAG,IAAH,GAAU,KAAKpC,cAAL,CAAoBlP,SAApB,CAA8B0K,cAAc,CAAC1H,GAAD,CAA5C,CAAhJ;UAAoMyC,KAAK,EAAE;YACnOyB,UAAU,EAAEK,SAAS,GAAG,EAAH,GAAQ,QADsM;YAEnOgC,SAAS,EAAEkD,UAAU,GAAG,EAAH,GAAQnF,SAAS,CAACiC,SAF4L;YAGnOsI,GAAG,EAAEpF,UAAU,GAAGnF,SAAS,CAACoF,WAAb,GAA2B,EAHyL;YAInO8E,IAJmO;YAKnOC;UALmO;QAA3M,CAAR,EAMf3N,kBAAkB,CAACd,GAAD,CAAlB,GAA2B/C,aAAa,CAAC4E,kBAAD,EAAqBL,MAAM,CAACC,MAAP,CAAc;UAAEzB,GAAG,EAAEA,GAAP;UAAYmE,UAAU,EAAEA,UAAxB;UAAoCC,UAAU,EAAEJ,UAAU,KAAKK,cAA/D;UAA+E1C,sBAAsB,EAAEA;QAAvG,CAAd,EAA+I1G,UAAU,CAAC+E,GAAD,EAAMoD,UAAN,CAAzJ,CAArB,CAAxC,GAA8OnG,aAAa,CAACqE,eAAD,EAAkBE,MAAM,CAACC,MAAP,CAAc;UAAEzB,GAAG,EAAEA,GAAP;UAAYmE,UAAU,EAAEA,UAAxB;UAAoC9B,UAAU,EAAEA,UAAhD;UAA4DC,eAAe,EAAEA,eAA7E;UAA8F8B,UAAU,EAAEJ,UAAU,KAAKK,cAAzH;UAAyI1C,sBAAsB,EAAEA;QAAjK,CAAd,EAAyM1G,UAAU,CAAC+E,GAAD,EAAMoD,UAAN,CAAnN,CAAlB,CAN5O,CAAxB;MAOH;IACJ;;IACD,OAAOmL,KAAP;EACH;;EACDb,cAAc,CAAC9N,IAAD,EAAOkP,QAAP,EAAiB;IAC3B,IAAI;MAAEJ;IAAF,IAAY,KAAK/Q,OAArB;IACA,IAAI;MAAEyF;IAAF,IAAiB,KAAK1F,KAA1B;IACA,IAAI;MAAEyO;IAAF,IAAqB,KAAKvH,KAA9B;IACA,IAAI2J,KAAK,GAAG,EAAZ;;IACA,IAAIpC,cAAJ,EAAoB;MAChB,KAAK,IAAInM,GAAT,IAAgBJ,IAAhB,EAAsB;QAClB,IAAImP,YAAY,GAAGL,KAAK,GAAG;UACvBD,KAAK,EAAE,CADgB;UAEvBD,IAAI,EAAErC,cAAc,CAACwC,KAAf,CAAqB3O,GAAG,CAACmB,OAAzB,IAAoCgL,cAAc,CAACwC,KAAf,CAAqB3O,GAAG,CAACI,QAAzB;QAFnB,CAAH,GAGpB;UACAoO,IAAI,EAAE,CADN;UAEAC,KAAK,EAAEtC,cAAc,CAACyC,MAAf,CAAsB5O,GAAG,CAACI,QAA1B,IAAsC+L,cAAc,CAACyC,MAAf,CAAsB5O,GAAG,CAACmB,OAA1B;QAF7C,CAHJ;QAOAoN,KAAK,CAACxQ,IAAN,CAAWd,aAAa,CAAC,KAAD,EAAQ;UAAEgB,GAAG,EAAEhC,kBAAkB,CAAC+D,GAAG,CAACgB,UAAL,CAAzB;UAA2CwB,SAAS,EAAE,uBAAtD;UAA+EC,KAAK,EAAEsM;QAAtF,CAAR,EAA8GD,QAAQ,KAAK,UAAb,GAClI7R,aAAa,CAACf,OAAD,EAAUsF,MAAM,CAACC,MAAP,CAAc;UAAEzB,GAAG,EAAEA;QAAP,CAAd,EAA4B/E,UAAU,CAAC+E,GAAD,EAAMoD,UAAN,CAAtC,CAAV,CADqH,GAElIjH,UAAU,CAAC2S,QAAD,CAFU,CAAxB;MAGH;IACJ;;IACD,OAAO7R,aAAa,CAACC,QAAD,EAAW,EAAX,EAAe,GAAGqR,KAAlB,CAApB;EACH;;EACDjC,YAAY,CAAC0C,sBAAD,EAAyB;IACjC,IAAI;MAAEtR,KAAF;MAASkH,KAAT;MAAgBoH;IAAhB,IAAgC,IAApC;;IACA,IAAI,CAACtO,KAAK,CAACkB,QAAP,IACAlB,KAAK,CAACuR,WAAN,KAAsB,IAD1B,CAC+B;IAD/B,EAEE;MACE,IAAID,sBAAJ,EAA4B;QACxB,IAAIE,QAAQ,GAAGxR,KAAK,CAACuK,KAAN,CAAYlE,GAAZ,CAAiBoJ,IAAD,IAAUnB,WAAW,CAACmD,UAAZ,CAAuBhC,IAAI,CAAClP,GAA5B,CAA1B,CAAf;;QACA,IAAIiR,QAAQ,CAACrG,MAAb,EAAqB;UACjB,IAAIuG,QAAQ,GAAG,KAAKzK,SAAL,CAAe0K,OAA9B;UACA,IAAIC,gBAAgB,GAAG,IAAIlT,aAAJ,CAAkBgT,QAAlB,EAA4BF,QAA5B,EAAsC,IAAtC,EAA4C;UACnE,KADuB,CAAvB;;UAEA,IAAI,CAACtK,KAAK,CAACuH,cAAP,IAAyB,CAACvH,KAAK,CAACuH,cAAN,CAAqBoD,SAArB,CAA+BD,gBAA/B,CAA9B,EAAgF;YAC5E,KAAKE,QAAL,CAAc;cACVrD,cAAc,EAAE,IAAI/P,aAAJ,CAAkBgT,QAAlB,EAA4BF,QAA5B,EAAsC,IAAtC,EAA4C;cAC5D,KADgB;YADN,CAAd;UAIH;QACJ;MACJ;;MACD,MAAMO,aAAa,GAAG,KAAK7K,KAAL,CAAWmD,UAAjC;MACA,MAAM2H,aAAa,GAAG,KAAKC,eAAL,EAAtB;MACA,MAAMC,oBAAoB,GAAGlS,KAAK,CAACkK,YAAN,KAAuB,IAAvB,IAA+BlK,KAAK,CAACmK,eAAN,KAA0B,IAAtF;MACA,KAAKgI,YAAL,CAAkB;QACd;QACA;QACA;QACA9H,UAAU,EAAEvG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgO,aAAlB,CAAd,EAAgDC,aAAhD,CAJE;QAKd1H,gBAAgB,EAAE4H,oBAAoB,GAAG,KAAKE,uBAAL,EAAH,GAAoC;MAL5D,CAAlB;IAOH;EACJ;;EACDH,eAAe,GAAG;IACd,IAAII,QAAQ,GAAG,KAAK7D,cAAL,CAAoBiD,UAAnC;IACA,IAAIpH,UAAU,GAAG,EAAjB,CAFc,CAGd;;IACA,KAAK,IAAIM,MAAT,IAAmB0H,QAAnB,EAA6B;MACzB,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAAC1H,MAAD,CAAR,CAAiB8H,qBAAjB,GAAyCH,MAApD,CAAb;MACAjI,UAAU,CAACM,MAAD,CAAV,GAAqB4H,IAAI,CAACG,GAAL,CAASrI,UAAU,CAACM,MAAD,CAAV,IAAsB,CAA/B,EAAkC2H,MAAlC,CAArB;IACH;;IACD,OAAOjI,UAAP;EACH;;EACD+H,uBAAuB,GAAG;IACtB,IAAIO,QAAQ,GAAG,KAAK3S,KAAL,CAAWuK,KAAX,CAAiB,CAAjB,EAAoBhK,GAAnC;IACA,IAAIqS,MAAM,GAAG,KAAKvE,UAAL,CAAgBoD,UAAhB,CAA2BkB,QAA3B,CAAb;IACA,IAAIE,aAAa,GAAG,KAAKtE,QAAL,CAAckD,UAAd,CAAyBkB,QAAzB,CAApB;IACA,OAAOC,MAAM,CAACH,qBAAP,GAA+BK,MAA/B,GAAwCD,aAAa,CAACJ,qBAAd,GAAsCtB,GAArF;EACH;;EACD4B,UAAU,GAAG;IACT,IAAIC,KAAK,GAAG,KAAK3E,UAAL,CAAgBoD,UAA5B;IACA,OAAO,KAAKzR,KAAL,CAAWuK,KAAX,CAAiBlE,GAAjB,CAAsBoJ,IAAD,IAAUuD,KAAK,CAACvD,IAAI,CAAClP,GAAN,CAApC,CAAP;EACH;;AA1LgC;;AA4LrC6N,QAAQ,CAAC6E,gBAAT,CAA0B;EACtB5I,UAAU,EAAE/L;AADU,CAA1B;;AAGA,SAASuR,qBAAT,CAA+BqD,UAA/B,EAA2CC,aAA3C,EAA0D;EACtD,IAAI,CAACD,UAAU,CAAC/H,MAAhB,EAAwB;IACpB,OAAO,EAAP;EACH;;EACD,IAAIiI,gBAAgB,GAAGC,oBAAoB,CAACF,aAAD,CAA3C,CAJsD,CAIM;;EAC5D,OAAOD,UAAU,CAAC7M,GAAX,CAAgB/D,GAAD,KAAU;IAC5BA,GAD4B;IAE5BuE,SAAS,EAAE,IAFiB;IAG5BkF,UAAU,EAAE,IAHgB;IAI5BC,WAAW,EAAEoH,gBAAgB,CAAC9Q,GAAG,CAACgB,UAAJ,CAAeiD,QAAf,CAAwBD,UAAzB,CAJD;IAK5BuC,SAAS,EAAE;EALiB,CAAV,CAAf,CAAP;AAOH;;AACD,SAASwK,oBAAT,CAA8BF,aAA9B,EAA6C;EACzC,IAAIC,gBAAgB,GAAG,EAAvB;;EACA,KAAK,IAAIE,UAAT,IAAuBH,aAAvB,EAAsC;IAClC,KAAK,IAAIvM,SAAT,IAAsB0M,UAAtB,EAAkC;MAC9BF,gBAAgB,CAACxM,SAAS,CAACtE,GAAV,CAAcgB,UAAd,CAAyBiD,QAAzB,CAAkCD,UAAnC,CAAhB,GAAiEM,SAAS,CAACoF,WAA3E;IACH;EACJ;;EACD,OAAOoH,gBAAP;AACH;;AAED,MAAMG,SAAN,SAAwB9W,aAAxB,CAAsC;EAClCiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAK6T,qBAAL,GAA6BnW,OAAO,CAAC4E,cAAD,CAApC;IACA,KAAKwR,gBAAL,GAAwBpW,OAAO,CAAC4E,cAAD,CAA/B;IACA,KAAKyR,gBAAL,GAAwBrW,OAAO,CAAC4E,cAAD,CAA/B;IACA,KAAK0R,sBAAL,GAA8BtW,OAAO,CAAC4E,cAAD,CAArC;IACA,KAAK2R,cAAL,GAAsBvW,OAAO,CAACsF,qBAAD,CAA7B;IACA,KAAKkR,gBAAL,GAAwBxW,OAAO,CAACsF,qBAAD,CAA/B;IACA,KAAKmR,OAAL,GAAe,IAAI1V,MAAJ,EAAf;EACH;;EACDyF,MAAM,GAAG;IACL,IAAI;MAAE7D,KAAF;MAASC;IAAT,IAAqB,IAAzB;IACA,IAAIkC,MAAM,GAAGnC,KAAK,CAACuK,KAAN,CAAYY,MAAzB;IACA,IAAI4I,qBAAqB,GAAG,KAAKP,qBAAL,CAA2BxT,KAAK,CAAC8O,gBAAjC,EAAmD3M,MAAnD,CAA5B;IACA,IAAI6R,gBAAgB,GAAG,KAAKP,gBAAL,CAAsBzT,KAAK,CAACgP,WAA5B,EAAyC7M,MAAzC,CAAvB;IACA,IAAI8R,gBAAgB,GAAG,KAAKP,gBAAL,CAAsB1T,KAAK,CAACqP,WAA5B,EAAyClN,MAAzC,CAAvB;IACA,IAAI+R,sBAAsB,GAAG,KAAKP,sBAAL,CAA4B3T,KAAK,CAAC0Q,iBAAlC,EAAqDvO,MAArD,CAA7B;IACA,IAAIgS,cAAc,GAAG,KAAKP,cAAL,CAAoB5T,KAAK,CAACmG,SAA1B,EAAqChE,MAArC,CAArB;IACA,IAAIiS,gBAAgB,GAAG,KAAKP,gBAAL,CAAsB7T,KAAK,CAACoG,WAA5B,EAAyCjE,MAAzC,CAAvB,CARK,CASL;IACA;;IACA,IAAI8N,aAAa,GAAI9N,MAAM,IAAI,CAAV,IAAenC,KAAK,CAACuR,WAAtB,GAChBvR,KAAK,CAACuR,WAAN,GAAoBtR,OAAO,CAACG,OAAR,CAAgBiU,WAApC,GAAkD,CADlC,GAEhB,IAFJ;IAGA,OAAQ9U,aAAa,CAACZ,QAAD,EAAW;MAAE2V,IAAI,EAAE;IAAR,CAAX,EAA4B,CAACC,OAAD,EAAU7O,UAAV,KAA0BnG,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiBQ,KAAK,CAACuK,KAAN,CAAYlE,GAAZ,CAAgB,CAACkE,KAAD,EAAQhI,GAAR,KAAiBhD,aAAa,CAAC6O,QAAD,EAAW;MAAElG,GAAG,EAAE,KAAK4L,OAAL,CAAaxU,SAAb,CAAuBiD,GAAvB,CAAP;MAAoChC,GAAG,EAAEgK,KAAK,CAACY,MAAN,GACjMZ,KAAK,CAAC,CAAD,CAAL,CAAShD,IAAT,CAAciN,WAAd;MAA4B;MADqK,EAEjMjS,GAFwJ,CAEpJ;MAFoJ;MAG5JuN,cAAc,EAAE3N,MAAM,GAAG,CAHmI;MAGhI4N,eAAe,EAAE/P,KAAK,CAAC+P,eAHyG;MAGxFrK,UAAU,EAAEA,UAH4E;MAGhED,WAAW,EAAEzF,KAAK,CAACyF,WAH6C;MAGhC8E,KAAK,EAAEA,KAHyB;MAGlBiF,WAAW,EAAExP,KAAK,CAACyU,cAHD;MAGiB3F,gBAAgB,EAAEiF,qBAAqB,CAACxR,GAAD,CAHxD;MAG+DoE,cAAc,EAAE3G,KAAK,CAAC2G,cAHrF;MAGqGqI,WAAW,EAAEgF,gBAAgB,CAACzR,GAAD,CAAhB,CAAsBoL,MAAtB,CAA6B+G,WAA7B;MAA0C;MAH5J;MAGwKrF,WAAW,EAAE4E,gBAAgB,CAAC1R,GAAD,CAHrM;MAG4MmO,iBAAiB,EAAEwD,sBAAsB,CAAC3R,GAAD,CAHrP;MAG4P4D,SAAS,EAAEgO,cAAc,CAAC5R,GAAD,CAHrR;MAG4R6D,WAAW,EAAEgO,gBAAgB,CAAC7R,GAAD,CAHzT;MAGgU2H,YAAY,EAAElK,KAAK,CAACkK,YAHpV;MAGkWC,eAAe,EAAEnK,KAAK,CAACmK,eAHzX;MAG0YoH,WAAW,EAAEvR,KAAK,CAACuR,WAH7Z;MAG0aoD,YAAY,EAAE3U,KAAK,CAAC2U,YAH9b;MAG4c1E,aAAa,EAAEA,aAH3d;MAG0e/O,QAAQ,EAAElB,KAAK,CAACkB;IAH1f,CAAX,CAA9C,CAAjB,CAAnE,CAArB;EAIH;;EACDgP,iBAAiB,GAAG;IAChB,KAAK0E,4BAAL;EACH;;EACDxE,kBAAkB,GAAG;IACjB;IACA,KAAKwE,4BAAL;EACH;;EACDA,4BAA4B,GAAG;IAC3B,IAAI,CAAC,KAAKC,MAAV,EAAkB;MACd;MACA;MACA,MAAMC,WAAW,GAAG,KAAKhB,OAAL,CAAarC,UAAb,CAAwB,CAAxB,EAA2BsB,UAA3B,GAAwC,CAAxC,CAApB;MACA,MAAM8B,MAAM,GAAGC,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,kBAApB,CAAH,GAA6C,IAAvE;;MACA,IAAIF,MAAJ,EAAY;QACR,KAAKA,MAAL,GAAcA,MAAd;QACA,KAAK5U,OAAL,CAAa2U,4BAAb,CAA0C,IAA1C,EAAgD;UAC5CvN,EAAE,EAAEwN,MADwC;UAE5CG,iBAAiB,EAAE,KAAKhV,KAAL,CAAWgV;QAFc,CAAhD;MAIH;IACJ;EACJ;;EACDxE,oBAAoB,GAAG;IACnB,IAAI,KAAKqE,MAAT,EAAiB;MACb,KAAK5U,OAAL,CAAagV,8BAAb,CAA4C,IAA5C;MACA,KAAKJ,MAAL,GAAc,IAAd;IACH;EACJ,CAzDiC,CA0DlC;EACA;;;EACAK,WAAW,GAAG;IACV,KAAKC,YAAL,GAAoB,IAAIzW,aAAJ,CAAkB,KAAKmW,MAAvB,EAA+B,KAAKf,OAAL,CAAasB,OAAb,GAAuB/O,GAAvB,CAA4BgP,MAAD,IAAYA,MAAM,CAACtC,UAAP,GAAoB,CAApB,CAAvC,CAA/B,EAA+F;IACnH,KADoB,EACb,IADa,CAApB;IAEA,KAAKuC,YAAL,GAAoB,IAAI5W,aAAJ,CAAkB,KAAKmW,MAAvB,EAA+B,KAAKf,OAAL,CAAarC,UAAb,CAAwB,CAAxB,EAA2BsB,UAA3B,EAA/B,EAAwE;IAC5F,IADoB,EACd;IACN,KAFoB,CAApB;EAGH;;EACDwC,QAAQ,CAACC,YAAD,EAAeC,WAAf,EAA4B;IAChC,IAAI;MAAEH,YAAF;MAAgBH;IAAhB,IAAiC,IAArC;IACA,IAAIlJ,GAAG,GAAGqJ,YAAY,CAACI,WAAb,CAAyBF,YAAzB,CAAV;IACA,IAAIjT,GAAG,GAAG4S,YAAY,CAACQ,UAAb,CAAwBF,WAAxB,CAAV;;IACA,IAAIlT,GAAG,IAAI,IAAP,IAAe0J,GAAG,IAAI,IAA1B,EAAgC;MAC5B,IAAIwD,IAAI,GAAG,KAAKzP,KAAL,CAAWuK,KAAX,CAAiBhI,GAAjB,EAAsB0J,GAAtB,CAAX;MACA,OAAO;QACHxG,WAAW,EAAE,KAAKzF,KAAL,CAAWyF,WADrB;QAEHmQ,QAAQ,EAAE9R,MAAM,CAACC,MAAP,CAAc;UAAEoJ,KAAK,EAAE,KAAK0I,YAAL,CAAkBtT,GAAlB,EAAuB0J,GAAvB,CAAT;UAAsCzI,MAAM,EAAE;QAA9C,CAAd,EAAoEiM,IAAI,CAACzJ,aAAzE,CAFP;QAGH8P,KAAK,EAAE,KAAKC,SAAL,CAAexT,GAAf,EAAoB0J,GAApB,CAHJ;QAIHU,IAAI,EAAE;UACFmE,IAAI,EAAEwE,YAAY,CAACrE,KAAb,CAAmBhF,GAAnB,CADJ;UAEF8E,KAAK,EAAEuE,YAAY,CAACpE,MAAb,CAAoBjF,GAApB,CAFL;UAGFkF,GAAG,EAAEgE,YAAY,CAACa,IAAb,CAAkBzT,GAAlB,CAHH;UAIFuQ,MAAM,EAAEqC,YAAY,CAACc,OAAb,CAAqB1T,GAArB;QAJN,CAJH;QAUH2T,KAAK,EAAE;MAVJ,CAAP;IAYH;;IACD,OAAO,IAAP;EACH;;EACDH,SAAS,CAACxT,GAAD,EAAM0J,GAAN,EAAW;IAChB,OAAO,KAAK6H,OAAL,CAAarC,UAAb,CAAwBlP,GAAxB,EAA6BwQ,UAA7B,GAA0C9G,GAA1C,CAAP,CADgB,CACuC;EAC1D;;EACD4J,YAAY,CAACtT,GAAD,EAAM0J,GAAN,EAAW;IACnB,IAAIhD,KAAK,GAAG,KAAKjJ,KAAL,CAAWuK,KAAX,CAAiBhI,GAAjB,EAAsB0J,GAAtB,EAA2B1E,IAAvC;IACA,IAAI4B,GAAG,GAAGnL,OAAO,CAACiL,KAAD,EAAQ,CAAR,CAAjB;IACA,OAAO;MAAEA,KAAF;MAASE;IAAT,CAAP;EACH;;AA/FiC;;AAiGtC,SAASuL,WAAT,CAAqBpS,GAArB,EAA0B;EACtB,OAAOA,GAAG,CAACgB,UAAJ,CAAeC,GAAf,CAAmBC,MAA1B;AACH;;AAED,MAAM2S,KAAN,SAAoB1Z,aAApB,CAAkC;EAC9BiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKe,KAAL,GAAapB,SAAS,EAAtB;IACA,KAAK8W,gBAAL,GAAwB,KAAxB;EACH;;EACDvS,MAAM,GAAG;IACL,IAAI;MAAE7D;IAAF,IAAY,IAAhB;IACA,IAAI;MAAEmK,eAAF;MAAmBD,YAAnB;MAAiCmM;IAAjC,IAAgDrW,KAApD;IACA,IAAIsW,gBAAgB,GAAGpM,YAAY,KAAK,IAAjB,IAAyBC,eAAe,KAAK,IAApE,CAHK,CAIL;IACA;;IACA,IAAImM,gBAAgB,IAAI,CAACD,UAAzB,EAAqC;MACjCC,gBAAgB,GAAG,KAAnB;MACAnM,eAAe,GAAG,IAAlB;MACAD,YAAY,GAAG,IAAf;IACH;;IACD,IAAIqM,UAAU,GAAG,CACb,iBADa,EAEbD,gBAAgB,GAAG,0BAAH,GAAgC,4BAFnC,EAGbD,UAAU,GAAG,EAAH,GAAQ,yBAHL,CAGgC;IAHhC,CAAjB;IAKA,OAAQ9W,aAAa,CAAC,KAAD,EAAQ;MAAE2I,GAAG,EAAE,KAAKxH,KAAZ;MAAmBoE,SAAS,EAAEyR,UAAU,CAACC,IAAX,CAAgB,GAAhB,CAA9B;MAAoDzR,KAAK,EAAE;QAChF;QACA;QACA0R,KAAK,EAAEzW,KAAK,CAACuR,WAHmE;QAIhFvP,QAAQ,EAAEhC,KAAK,CAAC0W;MAJgE;IAA3D,CAAR,EAMjBnX,aAAa,CAAC,OAAD,EAAU;MAAEuI,IAAI,EAAE,cAAR;MAAwBhD,SAAS,EAAE,0BAAnC;MAA+DC,KAAK,EAAE;QACrF0R,KAAK,EAAEzW,KAAK,CAACuR,WADwE;QAErFvP,QAAQ,EAAEhC,KAAK,CAAC0W,aAFqE;QAGrFpE,MAAM,EAAE+D,UAAU,GAAGrW,KAAK,CAAC2U,YAAT,GAAwB;MAH2C;IAAtE,CAAV,EAKT3U,KAAK,CAAC2W,YALG,EAMTpX,aAAa,CAAC,OAAD,EAAU;MAAEuI,IAAI,EAAE;IAAR,CAAV,EACTvI,aAAa,CAACgU,SAAD,EAAY;MAAE9N,WAAW,EAAEzF,KAAK,CAACyF,WAArB;MAAkC8E,KAAK,EAAEvK,KAAK,CAACuK,KAA/C;MAAsDkK,cAAc,EAAEzU,KAAK,CAACyU,cAA5E;MAA4F1E,eAAe,EAAE/P,KAAK,CAAC+P,eAAnH;MAAoIwB,WAAW,EAAEvR,KAAK,CAACuR,WAAvJ;MAAoKoD,YAAY,EAAE3U,KAAK,CAAC2U,YAAxL;MAAsM7F,gBAAgB,EAAE9O,KAAK,CAAC8O,gBAA9N;MAAgPE,WAAW,EAAEhP,KAAK,CAACgP,WAAnQ;MAAgRK,WAAW,EAAErP,KAAK,CAACqP,WAAnS;MAAgTqB,iBAAiB,EAAE1Q,KAAK,CAAC0Q,iBAAzU;MAA4V/J,cAAc,EAAE3G,KAAK,CAAC2G,cAAlX;MAAkYR,SAAS,EAAEnG,KAAK,CAACmG,SAAnZ;MAA8ZC,WAAW,EAAEpG,KAAK,CAACoG,WAAjb;MAA8b8D,YAAY,EAAEA,YAA5c;MAA0dC,eAAe,EAAEA,eAA3e;MAA4fjJ,QAAQ,EAAElB,KAAK,CAACkB,QAA5gB;MAAshB8T,iBAAiB,EAAEhV,KAAK,CAACgV;IAA/iB,CAAZ,CADJ,CANJ,CANI,CAArB;EAcH;;EACD9E,iBAAiB,GAAG;IAChB,KAAK0G,kBAAL;EACH;;EACDxG,kBAAkB,CAACC,SAAD,EAAY;IAC1B,IAAIA,SAAS,CAAC5K,WAAV,KAA0B,KAAKzF,KAAL,CAAWyF,WAAzC,EAAsD;MAClD,KAAKmR,kBAAL;IACH,CAFD,MAGK;MACD,KAAKC,gBAAL;IACH;EACJ;;EACDD,kBAAkB,GAAG;IACjB,KAAKR,gBAAL,GAAwB,IAAxB;IACA,KAAKS,gBAAL;EACH;;EACDA,gBAAgB,GAAG;IACf,IAAI,KAAKT,gBAAL,IACA,KAAKpW,KAAL,CAAWuR,WADf,CAC2B;IAD3B,EAEE;MACE,MAAMuF,SAAS,GAAGC,kBAAkB,CAAC,KAAKrW,KAAL,CAAWiR,OAAZ,EAAqB,KAAK3R,KAAL,CAAWyF,WAAhC,CAApC;;MACA,IAAIqR,SAAJ,EAAe;QACX,MAAMpF,QAAQ,GAAGoF,SAAS,CAAC/B,OAAV,CAAkB,kBAAlB,CAAjB;QACA,MAAMiC,QAAQ,GAAGtF,QAAQ,CAACqD,OAAT,CAAiB,cAAjB,CAAjB;QACA,MAAMkC,SAAS,GAAGH,SAAS,CAACrE,qBAAV,GAAkCtB,GAAlC,GACdO,QAAQ,CAACe,qBAAT,GAAiCtB,GADrC;QAEA6F,QAAQ,CAACC,SAAT,GAAqBA,SAAS,GAAIA,SAAS,GAAG,CAAhB,GAAqB,CAAnD,CALW,CAK2C;MACzD;;MACD,KAAKb,gBAAL,GAAwB,KAAxB;IACH;EACJ;;AAlE6B;;AAoElC,SAASW,kBAAT,CAA4BG,WAA5B,EAAyCzR,WAAzC,EAAsD;EAClD,IAAI4B,EAAJ;;EACA,IAAI5B,WAAW,CAAC0R,gBAAZ,CAA6BC,KAA7B,CAAmC,YAAnC,CAAJ,EAAsD;IAClD/P,EAAE,GAAG6P,WAAW,CAACG,aAAZ,CAA2B,eAAczY,iBAAiB,CAAC6G,WAAW,CAAC6R,WAAb,CAA0B,OAApF,CAAL,CADkD,CAElD;EACH;;EACD,IAAI,CAACjQ,EAAL,EAAS;IACLA,EAAE,GAAG6P,WAAW,CAACG,aAAZ,CAA2B,eAAcxY,eAAe,CAAC4G,WAAW,CAAC6R,WAAb,CAA0B,IAAlF,CAAL,CADK,CAEL;EACH;;EACD,OAAOjQ,EAAP;AACH;;AAED,MAAMkQ,cAAN,SAA6BzY,MAA7B,CAAoC;EAChCY,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAK6X,kBAAL,GAA0B,IAA1B;EACH;;EACDC,UAAU,CAACC,SAAD,EAAYC,aAAZ,EAA2B;IACjC,OAAOA,aAAa,CAACF,UAAd,CAAyBC,SAAzB,CAAP;EACH;;AAP+B;;AAUpC,MAAME,QAAN,SAAuBnb,aAAvB,CAAqC;EACjCiD,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKkY,MAAL,GAAc,IAAIN,cAAJ,EAAd;IACA,KAAKO,QAAL,GAAgBxY,SAAS,EAAzB;EACH;;EACDuE,MAAM,GAAG;IACL,IAAI;MAAE7D,KAAF;MAASC;IAAT,IAAqB,IAAzB;IACA,OAAQV,aAAa,CAAC4W,KAAD,EAAQrS,MAAM,CAACC,MAAP,CAAc;MAAEmE,GAAG,EAAE,KAAK4P;IAAZ,CAAd,EAAsC,KAAKD,MAAL,CAAYE,UAAZ,CAAuB/X,KAAvB,EAA8BA,KAAK,CAACyF,WAApC,EAAiDzF,KAAK,CAACgY,gBAAvD,EAAyE/X,OAAzE,EAAkFD,KAAK,CAAC2X,aAAxF,CAAtC,EAA8I;MAAElS,WAAW,EAAEzF,KAAK,CAACyF,WAArB;MAAkC8E,KAAK,EAAEvK,KAAK,CAAC2X,aAAN,CAAoBpN,KAA7D;MAAoEoM,YAAY,EAAE3W,KAAK,CAAC2W,YAAxF;MAAsGD,aAAa,EAAE1W,KAAK,CAAC0W,aAA3H;MAA0IjC,cAAc,EAAEzU,KAAK,CAACyU,cAAhK;MAAgLvK,YAAY,EAAElK,KAAK,CAACkK,YAApM;MAAkNC,eAAe,EAAEnK,KAAK,CAACmK,eAAzO;MAA0P4F,eAAe,EAAE/P,KAAK,CAAC+P,eAAjR;MAAkSsG,UAAU,EAAErW,KAAK,CAACqW,UAApT;MAAgU4B,gBAAgB,EAAEjY,KAAK,CAACiY,gBAAxV;MAA0W1G,WAAW,EAAEvR,KAAK,CAACuR,WAA7X;MAA0YoD,YAAY,EAAE3U,KAAK,CAAC2U,YAA9Z;MAA4azT,QAAQ,EAAElB,KAAK,CAACkB;IAA5b,CAA9I,CAAR,CAArB;EACH;;AATgC;;AAYrC,MAAMgX,YAAN,SAA2BzY,SAA3B,CAAqC;EACjCC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKwY,kBAAL,GAA0B9a,OAAO,CAAC8a,kBAAD,CAAjC;IACA,KAAKC,SAAL,GAAiB9Y,SAAS,EAA1B;IACA,KAAKwY,QAAL,GAAgBxY,SAAS,EAAzB,CAJU,CAKV;EACH;;EACDuE,MAAM,GAAG;IACL,IAAI;MAAEzD,OAAF;MAAWiY;IAAX,IAAoC,KAAKpY,OAA7C;IACA,IAAI;MAAED;IAAF,IAAY,IAAhB;IACA,IAAI2X,aAAa,GAAG,KAAKQ,kBAAL,CAAwBnY,KAAK,CAACyF,WAA9B,EAA2C4S,oBAA3C,CAApB;IACA,IAAIC,aAAa,GAAGlY,OAAO,CAACmY,UAAR,IAAuBhZ,aAAa,CAACR,SAAD,EAAY;MAAEmJ,GAAG,EAAE,KAAKkQ,SAAZ;MAAuB3S,WAAW,EAAEzF,KAAK,CAACyF,WAA1C;MAAuD+S,KAAK,EAAEb,aAAa,CAACc,WAA5E;MAAyFC,oBAAoB,EAAEf,aAAa,CAACxV,MAAd,KAAyB;IAAxI,CAAZ,CAAxD;;IACA,IAAIpC,WAAW,GAAI4Y,UAAD,IAAiBpZ,aAAa,CAACqY,QAAD,EAAW;MAAE1P,GAAG,EAAE,KAAK4P,QAAZ;MAAsBrS,WAAW,EAAEzF,KAAK,CAACyF,WAAzC;MAAsDkS,aAAa,EAAEA,aAArE;MAAoFiB,aAAa,EAAE5Y,KAAK,CAAC4Y,aAAzG;MAAwHC,aAAa,EAAE7Y,KAAK,CAAC6Y,aAA7I;MAA4JC,UAAU,EAAE9Y,KAAK,CAAC8Y,UAA9K;MAA0LC,YAAY,EAAE/Y,KAAK,CAAC+Y,YAA9M;MAA4NpS,cAAc,EAAE3G,KAAK,CAAC2G,cAAlP;MAAkQR,SAAS,EAAEnG,KAAK,CAACmG,SAAnR;MAA8RC,WAAW,EAAEpG,KAAK,CAACoG,WAAjT;MAA8T4R,gBAAgB,EAAE5X,OAAO,CAAC4X,gBAAxV;MAA0WrB,YAAY,EAAEgC,UAAU,CAACK,iBAAnY;MAAsZtC,aAAa,EAAEiC,UAAU,CAACjC,aAAhb;MAA+bxM,YAAY,EAAE9J,OAAO,CAAC8J,YAArd;MAAmeC,eAAe,EAAE/J,OAAO,CAAC+J,eAA5f;MAA6gB4F,eAAe,EAAE3P,OAAO,CAAC6Y,WAAtiB;MAAmjB5C,UAAU,EAAE,CAACrW,KAAK,CAACiB,YAAtkB;MAAolBgX,gBAAgB,EAAE,KAAKrY,WAA3mB;MAAwnB2R,WAAW,EAAEoH,UAAU,CAACpH,WAAhpB;MAA6pBoD,YAAY,EAAEgE,UAAU,CAAChE,YAAtrB;MAAosBzT,QAAQ,EAAElB,KAAK,CAACkB;IAAptB,CAAX,CAAhD;;IACA,OAAOd,OAAO,CAACmB,WAAR,GACD,KAAKF,mBAAL,CAAyBiX,aAAzB,EAAwCvY,WAAxC,EAAqD4X,aAAa,CAACrW,MAAnE,EAA2ElB,OAAO,CAACmB,WAAnF,CADC,GAED,KAAK1B,kBAAL,CAAwByY,aAAxB,EAAuCvY,WAAvC,CAFN;EAGH;;AAjBgC;;AAmBrC,SAASoY,kBAAT,CAA4B1S,WAA5B,EAAyC4S,oBAAzC,EAA+D;EAC3D,IAAIa,SAAS,GAAG,IAAIla,cAAJ,CAAmByG,WAAW,CAAC0T,WAA/B,EAA4Cd,oBAA5C,CAAhB;EACA,OAAO,IAAIpZ,aAAJ,CAAkBia,SAAlB,EAA6B,kBAAkBE,IAAlB,CAAuB3T,WAAW,CAAC0R,gBAAnC,CAA7B,CAAP;AACH;;AAED,MAAMkC,yBAAN,SAAwCna,oBAAxC,CAA6D;EACzD;EACAoa,gBAAgB,CAAC3R,YAAD,EAAewP,gBAAf,EAAiCoC,aAAjC,EAAgD;IAC5D,IAAIJ,WAAW,GAAG,MAAMG,gBAAN,CAAuB3R,YAAvB,EAAqCwP,gBAArC,EAAuDoC,aAAvD,CAAlB;IACA,IAAI;MAAEvZ;IAAF,IAAY,IAAhB;IACA,OAAOwZ,wBAAwB,CAAC;MAC5B7R,YAAY,EAAEwR,WADc;MAE5BM,UAAU,EAAE,iBAAiBL,IAAjB,CAAsBjC,gBAAtB,CAFgB;MAG5BuC,cAAc,EAAE1Z,KAAK,CAAC0Z,cAHM;MAI5BpS,OAAO,EAAEtH,KAAK,CAACsH;IAJa,CAAD,CAA/B;EAMH;;AAXwD;;AAa7D,SAASkS,wBAAT,CAAkCxZ,KAAlC,EAAyC;EACrC,IAAI;IAAEsH,OAAF;IAAWK;EAAX,IAA4B3H,KAAhC;EACA,IAAI;IAAEiJ,KAAF;IAASE;EAAT,IAAiBxB,YAArB;EACA,IAAIgS,SAAJ,CAHqC,CAIrC;;EACA,IAAI3Z,KAAK,CAACyZ,UAAV,EAAsB;IAClBxQ,KAAK,GAAG3B,OAAO,CAACsS,WAAR,CAAoB3Q,KAApB,CAAR,CADkB,CAElB;;IACA0Q,SAAS,GAAGrS,OAAO,CAACsS,WAAR,CAAoBzQ,GAApB,CAAZ;;IACA,IAAIwQ,SAAS,CAAC9P,OAAV,OAAwBV,GAAG,CAACU,OAAJ,EAA5B,EAA2C;MACvCV,GAAG,GAAGhK,QAAQ,CAACwa,SAAD,EAAY,CAAZ,CAAd;IACH;EACJ,CAZoC,CAarC;;;EACA,IAAI3Z,KAAK,CAAC0Z,cAAV,EAA0B;IACtB;IACA;IACA,IAAIG,oBAAoB,GAAGvS,OAAO,CAACsS,WAAR,CAAoBtS,OAAO,CAACwS,YAAR,CAAqB9b,OAAO,CAAC2J,YAAY,CAACwB,GAAd,EAAmB,CAAC,CAApB,CAA5B,CAApB,CAA3B;IACA,IAAIhH,MAAM,GAAGoQ,IAAI,CAACwH,IAAL,EAAU;IACvB3a,SAAS,CAACya,oBAAD,EAAuB1Q,GAAvB,CADI,CAAb;IAEAA,GAAG,GAAGhK,QAAQ,CAACgK,GAAD,EAAM,IAAIhH,MAAV,CAAd;EACH;;EACD,OAAO;IAAE8G,KAAF;IAASE;EAAT,CAAP;AACH;;AAED,IAAI6Q,QAAQ,GAAG,s8GAAf;AACA3a,YAAY,CAAC2a,QAAD,CAAZ;AAEA,SAAS9B,YAAY,IAAI+B,WAAzB,EAAsCrC,QAAtC,EAAgDL,cAAhD,EAAgEpB,KAAhE,EAAuEkD,yBAAvE,EAAkG9F,SAAlG,EAA6G9T,SAA7G,EAAwH0Y,kBAAxH,EAA4IqB,wBAA5I"},"metadata":{},"sourceType":"module"}